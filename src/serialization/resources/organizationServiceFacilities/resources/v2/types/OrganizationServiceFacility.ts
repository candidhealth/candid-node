/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { OrganizationServiceFacilityId } from "./OrganizationServiceFacilityId";
import { FacilityTypeCode } from "../../../../commons/types/FacilityTypeCode";
import { ServiceFacilityStatus } from "./ServiceFacilityStatus";
import { ServiceFacilityOperationalStatus } from "./ServiceFacilityOperationalStatus";
import { ServiceFacilityMode } from "./ServiceFacilityMode";
import { ServiceFacilityType } from "./ServiceFacilityType";
import { ServiceFacilityPhysicalType } from "./ServiceFacilityPhysicalType";
import { StreetAddressLongZip } from "../../../../commons/types/StreetAddressLongZip";

export const OrganizationServiceFacility: core.serialization.ObjectSchema<
    serializers.organizationServiceFacilities.v2.OrganizationServiceFacility.Raw,
    CandidApi.organizationServiceFacilities.v2.OrganizationServiceFacility
> = core.serialization.object({
    organizationServiceFacilityId: core.serialization.property(
        "organization_service_facility_id",
        OrganizationServiceFacilityId,
    ),
    name: core.serialization.string(),
    aliases: core.serialization.list(core.serialization.string()),
    description: core.serialization.string().optional(),
    externalId: core.serialization.property("external_id", core.serialization.string().optional()),
    npi: core.serialization.string().optional(),
    placeOfServiceCode: core.serialization.property("place_of_service_code", FacilityTypeCode.optional()),
    status: ServiceFacilityStatus.optional(),
    operationalStatus: core.serialization.property("operational_status", ServiceFacilityOperationalStatus.optional()),
    mode: ServiceFacilityMode.optional(),
    type: ServiceFacilityType.optional(),
    physicalType: core.serialization.property("physical_type", ServiceFacilityPhysicalType.optional()),
    telecoms: core.serialization.list(core.serialization.string()),
    address: StreetAddressLongZip,
});

export declare namespace OrganizationServiceFacility {
    export interface Raw {
        organization_service_facility_id: OrganizationServiceFacilityId.Raw;
        name: string;
        aliases: string[];
        description?: string | null;
        external_id?: string | null;
        npi?: string | null;
        place_of_service_code?: FacilityTypeCode.Raw | null;
        status?: ServiceFacilityStatus.Raw | null;
        operational_status?: ServiceFacilityOperationalStatus.Raw | null;
        mode?: ServiceFacilityMode.Raw | null;
        type?: ServiceFacilityType.Raw | null;
        physical_type?: ServiceFacilityPhysicalType.Raw | null;
        telecoms: string[];
        address: StreetAddressLongZip.Raw;
    }
}
