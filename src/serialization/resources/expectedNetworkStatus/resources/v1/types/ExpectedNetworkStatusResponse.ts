/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const ExpectedNetworkStatusResponse: core.serialization.ObjectSchema<
    serializers.expectedNetworkStatus.v1.ExpectedNetworkStatusResponse.Raw,
    CandidApi.expectedNetworkStatus.v1.ExpectedNetworkStatusResponse
> = core.serialization.object({
    expectedNetworkStatus: core.serialization.property(
        "expected_network_status",
        core.serialization.lazy(
            async () => (await import("../../../../..")).expectedNetworkStatus.v1.ExpectedNetworkStatus
        )
    ),
    explanation: core.serialization.string(),
    contractId: core.serialization.property(
        "contract_id",
        core.serialization.lazy(async () => (await import("../../../../..")).ContractId).optional()
    ),
});

export declare namespace ExpectedNetworkStatusResponse {
    interface Raw {
        expected_network_status: serializers.expectedNetworkStatus.v1.ExpectedNetworkStatus.Raw;
        explanation: string;
        contract_id?: serializers.ContractId.Raw | null;
    }
}
