/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const ComputeAllInNetworkRenderingProvidersResult: core.serialization.Schema<
    serializers.expectedNetworkStatus.v2.ComputeAllInNetworkRenderingProvidersResult.Raw,
    CandidApi.expectedNetworkStatus.v2.ComputeAllInNetworkRenderingProvidersResult
> = core.serialization
    .union("type", {
        rendering_providers: core.serialization.lazyObject(
            async () => (await import("../../../../..")).expectedNetworkStatus.v2.InNetworkRenderingProvidersDetail
        ),
        indeterminate: core.serialization.lazyObject(
            async () => (await import("../../../../..")).expectedNetworkStatus.v2.IndeterminateNetworkStatus
        ),
        out_of_network: core.serialization.lazyObject(
            async () => (await import("../../../../..")).expectedNetworkStatus.v2.OutOfNetworkStatus
        ),
    })
    .transform<CandidApi.expectedNetworkStatus.v2.ComputeAllInNetworkRenderingProvidersResult>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ComputeAllInNetworkRenderingProvidersResult {
    type Raw =
        | ComputeAllInNetworkRenderingProvidersResult.RenderingProviders
        | ComputeAllInNetworkRenderingProvidersResult.Indeterminate
        | ComputeAllInNetworkRenderingProvidersResult.OutOfNetwork;

    interface RenderingProviders extends serializers.expectedNetworkStatus.v2.InNetworkRenderingProvidersDetail.Raw {
        type: "rendering_providers";
    }

    interface Indeterminate extends serializers.expectedNetworkStatus.v2.IndeterminateNetworkStatus.Raw {
        type: "indeterminate";
    }

    interface OutOfNetwork extends serializers.expectedNetworkStatus.v2.OutOfNetworkStatus.Raw {
        type: "out_of_network";
    }
}
