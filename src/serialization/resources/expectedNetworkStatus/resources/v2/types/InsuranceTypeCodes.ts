/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { InsuranceTypeCode } from "../../../../commons/types/InsuranceTypeCode";

export const InsuranceTypeCodes: core.serialization.Schema<
    serializers.expectedNetworkStatus.v2.InsuranceTypeCodes.Raw,
    CandidApi.expectedNetworkStatus.v2.InsuranceTypeCodes
> = core.serialization
    .union("type", {
        insurance_type_code: core.serialization.object({
            value: InsuranceTypeCode,
        }),
        unknown_insurance_type_code: core.serialization.object({}),
        not_applicable: core.serialization.object({}),
    })
    .transform<CandidApi.expectedNetworkStatus.v2.InsuranceTypeCodes>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace InsuranceTypeCodes {
    type Raw =
        | InsuranceTypeCodes.InsuranceTypeCode
        | InsuranceTypeCodes.UnknownInsuranceTypeCode
        | InsuranceTypeCodes.NotApplicable;

    interface InsuranceTypeCode {
        type: "insurance_type_code";
        value: InsuranceTypeCode.Raw;
    }

    interface UnknownInsuranceTypeCode {
        type: "unknown_insurance_type_code";
    }

    interface NotApplicable {
        type: "not_applicable";
    }
}
