// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import type * as serializers from "../../../../../index";
import { IndeterminateNetworkStatus } from "./IndeterminateNetworkStatus";
import { InNetworkStatus } from "./InNetworkStatus";
import { OutOfNetworkStatus } from "./OutOfNetworkStatus";

export const ExpectedNetworkStatusV2: core.serialization.Schema<
    serializers.expectedNetworkStatus.v2.ExpectedNetworkStatusV2.Raw,
    CandidApi.expectedNetworkStatus.v2.ExpectedNetworkStatusV2
> = core.serialization
    .union("type", {
        in_network: InNetworkStatus,
        out_of_network: OutOfNetworkStatus,
        indeterminate: IndeterminateNetworkStatus,
    })
    .transform<CandidApi.expectedNetworkStatus.v2.ExpectedNetworkStatusV2>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ExpectedNetworkStatusV2 {
    export type Raw =
        | ExpectedNetworkStatusV2.InNetwork
        | ExpectedNetworkStatusV2.OutOfNetwork
        | ExpectedNetworkStatusV2.Indeterminate;

    export interface InNetwork extends InNetworkStatus.Raw {
        type: "in_network";
    }

    export interface OutOfNetwork extends OutOfNetworkStatus.Raw {
        type: "out_of_network";
    }

    export interface Indeterminate extends IndeterminateNetworkStatus.Raw {
        type: "indeterminate";
    }
}
