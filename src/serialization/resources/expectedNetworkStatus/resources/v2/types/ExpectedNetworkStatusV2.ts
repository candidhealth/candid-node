/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const ExpectedNetworkStatusV2: core.serialization.Schema<
    serializers.expectedNetworkStatus.v2.ExpectedNetworkStatusV2.Raw,
    CandidApi.expectedNetworkStatus.v2.ExpectedNetworkStatusV2
> = core.serialization
    .union("type", {
        in_network: core.serialization.lazyObject(
            async () => (await import("../../../../..")).expectedNetworkStatus.v2.InNetworkStatus
        ),
        out_of_network: core.serialization.lazyObject(
            async () => (await import("../../../../..")).expectedNetworkStatus.v2.OutOfNetworkStatus
        ),
        indeterminate: core.serialization.lazyObject(
            async () => (await import("../../../../..")).expectedNetworkStatus.v2.IndeterminateNetworkStatus
        ),
    })
    .transform<CandidApi.expectedNetworkStatus.v2.ExpectedNetworkStatusV2>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ExpectedNetworkStatusV2 {
    type Raw =
        | ExpectedNetworkStatusV2.InNetwork
        | ExpectedNetworkStatusV2.OutOfNetwork
        | ExpectedNetworkStatusV2.Indeterminate;

    interface InNetwork extends serializers.expectedNetworkStatus.v2.InNetworkStatus.Raw {
        type: "in_network";
    }

    interface OutOfNetwork extends serializers.expectedNetworkStatus.v2.OutOfNetworkStatus.Raw {
        type: "out_of_network";
    }

    interface Indeterminate extends serializers.expectedNetworkStatus.v2.IndeterminateNetworkStatus.Raw {
        type: "indeterminate";
    }
}
