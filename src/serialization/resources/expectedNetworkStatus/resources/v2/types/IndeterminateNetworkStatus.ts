/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const IndeterminateNetworkStatus: core.serialization.ObjectSchema<
    serializers.expectedNetworkStatus.v2.IndeterminateNetworkStatus.Raw,
    CandidApi.expectedNetworkStatus.v2.IndeterminateNetworkStatus
> = core.serialization.object({
    explanation: core.serialization.string(),
    routedPayerUuid: core.serialization.property(
        "routed_payer_uuid",
        core.serialization.lazy(async () => (await import("../../../../..")).payers.v3.PayerUuid).optional()
    ),
    routedBillingProviderId: core.serialization.property(
        "routed_billing_provider_id",
        core.serialization
            .lazy(async () => (await import("../../../../..")).organizationProviders.v2.OrganizationProviderId)
            .optional()
    ),
});

export declare namespace IndeterminateNetworkStatus {
    interface Raw {
        explanation: string;
        routed_payer_uuid?: serializers.payers.v3.PayerUuid.Raw | null;
        routed_billing_provider_id?: serializers.organizationProviders.v2.OrganizationProviderId.Raw | null;
    }
}
