/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";

export const ChargeCaptureBundleSummary: core.serialization.ObjectSchema<
    serializers.chargeCaptureBundles.v1.ChargeCaptureBundleSummary.Raw,
    CandidApi.chargeCaptureBundles.v1.ChargeCaptureBundleSummary
> = core.serialization.object({
    chargeCaptureUnbundledCount: core.serialization.property(
        "charge_capture_unbundled_count",
        core.serialization.number(),
    ),
    chargeCaptureBundlesNotStartedCount: core.serialization.property(
        "charge_capture_bundles_not_started_count",
        core.serialization.number(),
    ),
    chargeCaptureBundlesInErrorCount: core.serialization.property(
        "charge_capture_bundles_in_error_count",
        core.serialization.number(),
    ),
    chargeCaptureUnresolvedChangeCount: core.serialization.property(
        "charge_capture_unresolved_change_count",
        core.serialization.number(),
    ),
});

export declare namespace ChargeCaptureBundleSummary {
    export interface Raw {
        charge_capture_unbundled_count: number;
        charge_capture_bundles_not_started_count: number;
        charge_capture_bundles_in_error_count: number;
        charge_capture_unresolved_change_count: number;
    }
}
