/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { ChargeCaptureClaimCreationId } from "../../../../commons/types/ChargeCaptureClaimCreationId";
import { EncounterId } from "../../../../commons/types/EncounterId";
import { ChargeCaptureClaimCreationStatus } from "./ChargeCaptureClaimCreationStatus";
import { ChargeCaptureError } from "../../../../chargeCapture/resources/v1/types/ChargeCaptureError";

export const ChargeCaptureClaimCreation: core.serialization.ObjectSchema<
    serializers.chargeCaptureBundles.v1.ChargeCaptureClaimCreation.Raw,
    CandidApi.chargeCaptureBundles.v1.ChargeCaptureClaimCreation
> = core.serialization.object({
    id: ChargeCaptureClaimCreationId,
    createdEncounterId: core.serialization.property("created_encounter_id", EncounterId.optional()),
    status: ChargeCaptureClaimCreationStatus,
    characteristics: core.serialization.record(core.serialization.string(), core.serialization.string().optional()),
    errors: core.serialization.list(ChargeCaptureError),
});

export declare namespace ChargeCaptureClaimCreation {
    export interface Raw {
        id: ChargeCaptureClaimCreationId.Raw;
        created_encounter_id?: EncounterId.Raw | null;
        status: ChargeCaptureClaimCreationStatus.Raw;
        characteristics: Record<string, string | null | undefined>;
        errors: ChargeCaptureError.Raw[];
    }
}
