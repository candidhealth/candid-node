/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { EncounterId } from "../../../../commons/types/EncounterId";
import { TaskType } from "../../commons/types/TaskType";
import { UserId } from "../../../../commons/types/UserId";
import { TaskCategory } from "../../commons/types/TaskCategory";
import { WorkQueueId } from "../../../../commons/types/WorkQueueId";

export const TaskCreateV3: core.serialization.ObjectSchema<
    serializers.tasks.v3.TaskCreateV3.Raw,
    CandidApi.tasks.v3.TaskCreateV3
> = core.serialization.object({
    encounterId: core.serialization.property("encounter_id", EncounterId),
    taskType: core.serialization.property("task_type", TaskType),
    description: core.serialization.string(),
    blocksClaimSubmission: core.serialization.property(
        "blocks_claim_submission",
        core.serialization.boolean().optional(),
    ),
    assigneeUserId: core.serialization.property("assignee_user_id", UserId.optional()),
    category: TaskCategory.optional(),
    workQueueId: core.serialization.property("work_queue_id", WorkQueueId),
});

export declare namespace TaskCreateV3 {
    export interface Raw {
        encounter_id: EncounterId.Raw;
        task_type: TaskType.Raw;
        description: string;
        blocks_claim_submission?: boolean | null;
        assignee_user_id?: UserId.Raw | null;
        category?: TaskCategory.Raw | null;
        work_queue_id: WorkQueueId.Raw;
    }
}
