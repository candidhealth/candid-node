/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { TaskStatus } from "../../commons/types/TaskStatus";
import { UserId } from "../../../../commons/types/UserId";

export const TaskUpdateV3: core.serialization.ObjectSchema<
    serializers.tasks.v3.TaskUpdateV3.Raw,
    CandidApi.tasks.v3.TaskUpdateV3
> = core.serialization.object({
    status: TaskStatus.optional(),
    assigneeUserId: core.serialization.property("assignee_user_id", UserId.optional()),
    blocksClaimSubmission: core.serialization.property(
        "blocks_claim_submission",
        core.serialization.boolean().optional()
    ),
});

export declare namespace TaskUpdateV3 {
    interface Raw {
        status?: TaskStatus.Raw | null;
        assignee_user_id?: UserId.Raw | null;
        blocks_claim_submission?: boolean | null;
    }
}
