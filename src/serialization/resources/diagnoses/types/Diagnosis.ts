/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const Diagnosis: core.serialization.ObjectSchema<serializers.Diagnosis.Raw, CandidApi.Diagnosis> =
    core.serialization
        .object({
            diagnosisId: core.serialization.property(
                "diagnosis_id",
                core.serialization.lazy(async () => (await import("../../..")).DiagnosisId)
            ),
            createdAt: core.serialization.property("created_at", core.serialization.date()),
            updatedAt: core.serialization.property("updated_at", core.serialization.date()),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).StandaloneDiagnosisCreate));

export declare namespace Diagnosis {
    interface Raw extends serializers.StandaloneDiagnosisCreate.Raw {
        diagnosis_id: serializers.DiagnosisId.Raw;
        created_at: string;
        updated_at: string;
    }
}
