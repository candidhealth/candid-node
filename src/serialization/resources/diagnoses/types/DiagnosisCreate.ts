// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../api/index";
import * as core from "../../../../core";
import type * as serializers from "../../../index";
import { YesNoIndicator } from "../../yesNoIndicator/types/YesNoIndicator";
import { DiagnosisTypeCode } from "./DiagnosisTypeCode";

export const DiagnosisCreate: core.serialization.ObjectSchema<
    serializers.DiagnosisCreate.Raw,
    CandidApi.DiagnosisCreate
> = core.serialization.object({
    name: core.serialization.string().optional(),
    codeType: core.serialization.property("code_type", DiagnosisTypeCode),
    code: core.serialization.string(),
    presentOnAdmissionIndicator: core.serialization.property(
        "present_on_admission_indicator",
        YesNoIndicator.optional(),
    ),
});

export declare namespace DiagnosisCreate {
    export interface Raw {
        name?: string | null;
        code_type: DiagnosisTypeCode.Raw;
        code: string;
        present_on_admission_indicator?: YesNoIndicator.Raw | null;
    }
}
