/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const InsuranceRefund: core.serialization.ObjectSchema<
    serializers.insuranceRefunds.v1.InsuranceRefund.Raw,
    CandidApi.insuranceRefunds.v1.InsuranceRefund
> = core.serialization.object({
    insuranceRefundId: core.serialization.property(
        "insurance_refund_id",
        core.serialization.lazy(async () => (await import("../../../../..")).insuranceRefunds.v1.InsuranceRefundId)
    ),
    amountCents: core.serialization.property("amount_cents", core.serialization.number()),
    refundTimestamp: core.serialization.property("refund_timestamp", core.serialization.date().optional()),
    refundNote: core.serialization.property("refund_note", core.serialization.string().optional()),
    refundAllocations: core.serialization.property(
        "refund_allocations",
        core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../../../..")).RefundAllocation)
        )
    ),
});

export declare namespace InsuranceRefund {
    interface Raw {
        insurance_refund_id: serializers.insuranceRefunds.v1.InsuranceRefundId.Raw;
        amount_cents: number;
        refund_timestamp?: string | null;
        refund_note?: string | null;
        refund_allocations: serializers.RefundAllocation.Raw[];
    }
}
