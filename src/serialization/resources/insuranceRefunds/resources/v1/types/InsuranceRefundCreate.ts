/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const InsuranceRefundCreate: core.serialization.ObjectSchema<
    serializers.insuranceRefunds.v1.InsuranceRefundCreate.Raw,
    CandidApi.insuranceRefunds.v1.InsuranceRefundCreate
> = core.serialization.object({
    amountCents: core.serialization.property("amount_cents", core.serialization.number()),
    refundTimestamp: core.serialization.property("refund_timestamp", core.serialization.date().optional()),
    refundNote: core.serialization.property("refund_note", core.serialization.string().optional()),
    refundAllocations: core.serialization.property(
        "refund_allocations",
        core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../../../..")).RefundAllocationCreate)
        )
    ),
});

export declare namespace InsuranceRefundCreate {
    interface Raw {
        amount_cents: number;
        refund_timestamp?: string | null;
        refund_note?: string | null;
        refund_allocations: serializers.RefundAllocationCreate.Raw[];
    }
}
