/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const WriteOff: core.serialization.Schema<
    serializers.writeOffs.v1.WriteOff.Raw,
    CandidApi.writeOffs.v1.WriteOff
> = core.serialization
    .union("type", {
        patient: core.serialization.lazyObject(
            async () => (await import("../../../../..")).writeOffs.v1.PatientWriteOff
        ),
        insurance: core.serialization.lazyObject(
            async () => (await import("../../../../..")).writeOffs.v1.InsuranceWriteOff
        ),
    })
    .transform<CandidApi.writeOffs.v1.WriteOff>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace WriteOff {
    type Raw = WriteOff.Patient | WriteOff.Insurance;

    interface Patient extends serializers.writeOffs.v1.PatientWriteOff.Raw {
        type: "patient";
    }

    interface Insurance extends serializers.writeOffs.v1.InsuranceWriteOff.Raw {
        type: "insurance";
    }
}
