// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import type * as serializers from "../../../../../index";
import { StreetAddressShortZip } from "../../../../commons/types/StreetAddressShortZip";

export const NonInsurancePayerAddressUpdate: core.serialization.Schema<
    serializers.nonInsurancePayers.v1.NonInsurancePayerAddressUpdate.Raw,
    CandidApi.nonInsurancePayers.v1.NonInsurancePayerAddressUpdate
> = core.serialization
    .union("type", {
        remove: core.serialization.object({}),
        set: core.serialization.object({
            value: StreetAddressShortZip.optional(),
        }),
    })
    .transform<CandidApi.nonInsurancePayers.v1.NonInsurancePayerAddressUpdate>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace NonInsurancePayerAddressUpdate {
    export type Raw = NonInsurancePayerAddressUpdate.Remove | NonInsurancePayerAddressUpdate.Set;

    export interface Remove {
        type: "remove";
    }

    export interface Set {
        type: "set";
        value?: StreetAddressShortZip.Raw | null;
    }
}
