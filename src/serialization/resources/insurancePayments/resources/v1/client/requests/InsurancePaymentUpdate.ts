/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../..";
import * as CandidApi from "../../../../../../../api";
import * as core from "../../../../../../../core";

export const InsurancePaymentUpdate: core.serialization.Schema<
    serializers.insurancePayments.v1.InsurancePaymentUpdate.Raw,
    CandidApi.insurancePayments.v1.InsurancePaymentUpdate
> = core.serialization.object({
    paymentTimestamp: core.serialization.property("payment_timestamp", core.serialization.date().optional()),
    paymentNote: core.serialization.property(
        "payment_note",
        core.serialization.lazy(async () => (await import("../../../../../..")).NoteUpdate).optional()
    ),
});

export declare namespace InsurancePaymentUpdate {
    interface Raw {
        payment_timestamp?: string | null;
        payment_note?: serializers.NoteUpdate.Raw | null;
    }
}
