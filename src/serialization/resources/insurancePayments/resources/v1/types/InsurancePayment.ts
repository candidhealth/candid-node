/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { InsurancePaymentId } from "./InsurancePaymentId";
import { Payer } from "../../../../payers/resources/v3/types/Payer";
import { Allocation } from "../../../../financials/types/Allocation";

export const InsurancePayment: core.serialization.ObjectSchema<
    serializers.insurancePayments.v1.InsurancePayment.Raw,
    CandidApi.insurancePayments.v1.InsurancePayment
> = core.serialization.object({
    insurancePaymentId: core.serialization.property("insurance_payment_id", InsurancePaymentId),
    payer: Payer,
    amountCents: core.serialization.property("amount_cents", core.serialization.number()),
    paymentTimestamp: core.serialization.property("payment_timestamp", core.serialization.date().optional()),
    paymentNote: core.serialization.property("payment_note", core.serialization.string().optional()),
    allocations: core.serialization.list(Allocation),
});

export declare namespace InsurancePayment {
    export interface Raw {
        insurance_payment_id: InsurancePaymentId.Raw;
        payer: Payer.Raw;
        amount_cents: number;
        payment_timestamp?: string | null;
        payment_note?: string | null;
        allocations: Allocation.Raw[];
    }
}
