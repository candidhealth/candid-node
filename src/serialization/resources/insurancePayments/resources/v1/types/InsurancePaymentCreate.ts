/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const InsurancePaymentCreate: core.serialization.ObjectSchema<
    serializers.insurancePayments.v1.InsurancePaymentCreate.Raw,
    CandidApi.insurancePayments.v1.InsurancePaymentCreate
> = core.serialization.object({
    payerIdentifier: core.serialization.property(
        "payer_identifier",
        core.serialization.lazy(async () => (await import("../../../../..")).payers.v3.PayerIdentifier)
    ),
    amountCents: core.serialization.property("amount_cents", core.serialization.number()),
    paymentTimestamp: core.serialization.property("payment_timestamp", core.serialization.date().optional()),
    paymentNote: core.serialization.property("payment_note", core.serialization.string().optional()),
    allocations: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../..")).AllocationCreate)
    ),
});

export declare namespace InsurancePaymentCreate {
    interface Raw {
        payer_identifier: serializers.payers.v3.PayerIdentifier.Raw;
        amount_cents: number;
        payment_timestamp?: string | null;
        payment_note?: string | null;
        allocations: serializers.AllocationCreate.Raw[];
    }
}
