/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const ClaimAction: core.serialization.Schema<serializers.ClaimAction.Raw, CandidApi.ClaimAction> =
    core.serialization
        .union("type", {
            void_claim_action: core.serialization.lazyObject(async () => (await import("../../..")).VoidClaimAction),
            resubmit_fresh_claim_action: core.serialization.lazyObject(
                async () => (await import("../../..")).ResubmitFreshClaimAction
            ),
            resubmit_corrected_claim_action: core.serialization.lazyObject(
                async () => (await import("../../..")).ResubmitCorrectedClaimAction
            ),
            close_tasks_and_process_claim_action: core.serialization.lazyObject(
                async () => (await import("../../..")).CloseTasksAndProcessClaimAction
            ),
            move_to_work_queue_claim_action: core.serialization.lazyObject(
                async () => (await import("../../..")).MoveToWorkQueueClaimAction
            ),
        })
        .transform<CandidApi.ClaimAction>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace ClaimAction {
    type Raw =
        | ClaimAction.VoidClaimAction
        | ClaimAction.ResubmitFreshClaimAction
        | ClaimAction.ResubmitCorrectedClaimAction
        | ClaimAction.CloseTasksAndProcessClaimAction
        | ClaimAction.MoveToWorkQueueClaimAction;

    interface VoidClaimAction extends serializers.VoidClaimAction.Raw {
        type: "void_claim_action";
    }

    interface ResubmitFreshClaimAction extends serializers.ResubmitFreshClaimAction.Raw {
        type: "resubmit_fresh_claim_action";
    }

    interface ResubmitCorrectedClaimAction extends serializers.ResubmitCorrectedClaimAction.Raw {
        type: "resubmit_corrected_claim_action";
    }

    interface CloseTasksAndProcessClaimAction extends serializers.CloseTasksAndProcessClaimAction.Raw {
        type: "close_tasks_and_process_claim_action";
    }

    interface MoveToWorkQueueClaimAction extends serializers.MoveToWorkQueueClaimAction.Raw {
        type: "move_to_work_queue_claim_action";
    }
}
