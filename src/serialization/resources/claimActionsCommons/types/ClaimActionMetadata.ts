/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const ClaimActionMetadata: core.serialization.ObjectSchema<
    serializers.ClaimActionMetadata.Raw,
    CandidApi.ClaimActionMetadata
> = core.serialization.object({
    encounterId: core.serialization.property(
        "encounter_id",
        core.serialization.lazy(async () => (await import("../../..")).EncounterId)
    ),
    patientFirstName: core.serialization.property("patient_first_name", core.serialization.string()),
    patientLastName: core.serialization.property("patient_last_name", core.serialization.string()),
    dateOfService: core.serialization.property("date_of_service", core.serialization.string()),
    claimStatus: core.serialization.property(
        "claim_status",
        core.serialization.lazy(async () => (await import("../../..")).ClaimStatus)
    ),
});

export declare namespace ClaimActionMetadata {
    interface Raw {
        encounter_id: serializers.EncounterId.Raw;
        patient_first_name: string;
        patient_last_name: string;
        date_of_service: string;
        claim_status: serializers.ClaimStatus.Raw;
    }
}
