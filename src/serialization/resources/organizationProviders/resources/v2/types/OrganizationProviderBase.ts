/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { CandidApi } from "";
import * as core from "../../../../../../core";

export const OrganizationProviderBase: core.serialization.ObjectSchema<
    serializers.organizationProviders.v2.OrganizationProviderBase.Raw,
    CandidApi.organizationProviders.v2.OrganizationProviderBase
> = core.serialization.object({
    npi: core.serialization.string(),
    isRendering: core.serialization.property("is_rendering", core.serialization.boolean()),
    isBilling: core.serialization.property("is_billing", core.serialization.boolean()),
    firstName: core.serialization.property("first_name", core.serialization.string().optional()),
    lastName: core.serialization.property("last_name", core.serialization.string().optional()),
    organizationName: core.serialization.property("organization_name", core.serialization.string().optional()),
    providerType: core.serialization.property(
        "provider_type",
        core.serialization.lazy(async () => (await import("../../../../..")).organizationProviders.v2.ProviderType)
    ),
    taxId: core.serialization.property("tax_id", core.serialization.string().optional()),
    taxonomyCode: core.serialization.property("taxonomy_code", core.serialization.string().optional()),
    licenseType: core.serialization.property(
        "license_type",
        core.serialization.lazy(async () => (await import("../../../../..")).organizationProviders.v2.LicenseType)
    ),
    ptan: core.serialization.string().optional(),
    medicaidProviderId: core.serialization.property("medicaid_provider_id", core.serialization.string().optional()),
    addresses: core.serialization
        .list(
            core.serialization.lazyObject(
                async () => (await import("../../../../..")).organizationProviders.v2.OrganizationProviderAddress
            )
        )
        .optional(),
});

export declare namespace OrganizationProviderBase {
    interface Raw {
        npi: string;
        is_rendering: boolean;
        is_billing: boolean;
        first_name?: string | null;
        last_name?: string | null;
        organization_name?: string | null;
        provider_type: serializers.organizationProviders.v2.ProviderType.Raw;
        tax_id?: string | null;
        taxonomy_code?: string | null;
        license_type: serializers.organizationProviders.v2.LicenseType.Raw;
        ptan?: string | null;
        medicaid_provider_id?: string | null;
        addresses?: serializers.organizationProviders.v2.OrganizationProviderAddress.Raw[] | null;
    }
}
