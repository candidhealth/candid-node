/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { ChargeCaptureId } from "../../../../commons/types/ChargeCaptureId";
import { ChargeCaptureStatus } from "./ChargeCaptureStatus";
import { ChargeCaptureData } from "./ChargeCaptureData";
import { PatientExternalId } from "../../../../commons/types/PatientExternalId";
import { ChargeCaptureError } from "./ChargeCaptureError";
import { ChargeCapturePostBilledChange } from "./ChargeCapturePostBilledChange";

export const ChargeCapture: core.serialization.ObjectSchema<
    serializers.chargeCapture.v1.ChargeCapture.Raw,
    CandidApi.chargeCapture.v1.ChargeCapture
> = core.serialization.object({
    id: ChargeCaptureId,
    status: ChargeCaptureStatus,
    chargeCaptureData: core.serialization.property("charge_capture_data", ChargeCaptureData),
    patientExternalId: core.serialization.property("patient_external_id", PatientExternalId),
    chargeExternalId: core.serialization.property("charge_external_id", core.serialization.string()),
    ehrSourceUrl: core.serialization.property("ehr_source_url", core.serialization.string().optional()),
    dateOfService: core.serialization.property("date_of_service", core.serialization.string().optional()),
    error: ChargeCaptureError.optional(),
    updates: core.serialization.list(ChargeCapturePostBilledChange),
});

export declare namespace ChargeCapture {
    export interface Raw {
        id: ChargeCaptureId.Raw;
        status: ChargeCaptureStatus.Raw;
        charge_capture_data: ChargeCaptureData.Raw;
        patient_external_id: PatientExternalId.Raw;
        charge_external_id: string;
        ehr_source_url?: string | null;
        date_of_service?: string | null;
        error?: ChargeCaptureError.Raw | null;
        updates: ChargeCapturePostBilledChange.Raw[];
    }
}
