/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { ChargeCaptureId } from "../../../../commons/types/ChargeCaptureId";
import { ChargeCaptureClaimCreationId } from "../../../../commons/types/ChargeCaptureClaimCreationId";

export const ChargeCaptureError: core.serialization.ObjectSchema<
    serializers.chargeCapture.v1.ChargeCaptureError.Raw,
    CandidApi.chargeCapture.v1.ChargeCaptureError
> = core.serialization.object({
    id: core.serialization.string(),
    chargeCaptureId: core.serialization.property("charge_capture_id", ChargeCaptureId.optional()),
    message: core.serialization.string(),
    fieldInError: core.serialization.property("field_in_error", core.serialization.string().optional()),
    claimCreationId: core.serialization.property("claim_creation_id", ChargeCaptureClaimCreationId),
});

export declare namespace ChargeCaptureError {
    export interface Raw {
        id: string;
        charge_capture_id?: ChargeCaptureId.Raw | null;
        message: string;
        field_in_error?: string | null;
        claim_creation_id: ChargeCaptureClaimCreationId.Raw;
    }
}
