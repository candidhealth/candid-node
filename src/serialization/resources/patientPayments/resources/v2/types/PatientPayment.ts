/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { CandidApi } from "";
import * as core from "../../../../../../core";

export const PatientPayment: core.serialization.ObjectSchema<
    serializers.patientPayments.v2.PatientPayment.Raw,
    CandidApi.patientPayments.v2.PatientPayment
> = core.serialization.object({
    patientPaymentId: core.serialization.property(
        "patient_payment_id",
        core.serialization.lazy(async () => (await import("../../../../..")).patientPayments.v2.PatientPaymentId)
    ),
    organizationId: core.serialization.property(
        "organization_id",
        core.serialization.lazy(async () => (await import("../../../../..")).OrganizationId)
    ),
    sourceInternalId: core.serialization.property("source_internal_id", core.serialization.string()),
    source: core.serialization.lazy(
        async () => (await import("../../../../..")).patientPayments.v2.PatientPaymentSource
    ),
    amountCents: core.serialization.property("amount_cents", core.serialization.number()),
    paymentTimestamp: core.serialization.property("payment_timestamp", core.serialization.date().optional()),
    status: core.serialization
        .lazy(async () => (await import("../../../../..")).patientPayments.v2.PatientPaymentStatus)
        .optional(),
    paymentName: core.serialization.property("payment_name", core.serialization.string().optional()),
    paymentNote: core.serialization.property("payment_note", core.serialization.string().optional()),
    patientExternalId: core.serialization.property(
        "patient_external_id",
        core.serialization.lazy(async () => (await import("../../../../..")).PatientExternalId).optional()
    ),
    encounterId: core.serialization.property(
        "encounter_id",
        core.serialization.lazy(async () => (await import("../../../../..")).EncounterId).optional()
    ),
    serviceLineId: core.serialization.property(
        "service_line_id",
        core.serialization.lazy(async () => (await import("../../../../..")).ServiceLineId).optional()
    ),
});

export declare namespace PatientPayment {
    interface Raw {
        patient_payment_id: serializers.patientPayments.v2.PatientPaymentId.Raw;
        organization_id: serializers.OrganizationId.Raw;
        source_internal_id: string;
        source: serializers.patientPayments.v2.PatientPaymentSource.Raw;
        amount_cents: number;
        payment_timestamp?: string | null;
        status?: serializers.patientPayments.v2.PatientPaymentStatus.Raw | null;
        payment_name?: string | null;
        payment_note?: string | null;
        patient_external_id?: serializers.PatientExternalId.Raw | null;
        encounter_id?: serializers.EncounterId.Raw | null;
        service_line_id?: serializers.ServiceLineId.Raw | null;
    }
}
