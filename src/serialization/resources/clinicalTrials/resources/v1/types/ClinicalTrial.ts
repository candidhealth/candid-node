/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { ClinicalTrialId } from "../../../../commons/types/ClinicalTrialId";
import { NonInsurancePayerId } from "../../../../nonInsurancePayers/resources/v1/types/NonInsurancePayerId";
import { MutableClinicalTrial } from "./MutableClinicalTrial";

export const ClinicalTrial: core.serialization.ObjectSchema<
    serializers.clinicalTrials.v1.ClinicalTrial.Raw,
    CandidApi.clinicalTrials.v1.ClinicalTrial
> = core.serialization
    .object({
        clinicalTrialId: core.serialization.property("clinical_trial_id", ClinicalTrialId),
        nonInsurancePayerId: core.serialization.property("non_insurance_payer_id", NonInsurancePayerId),
        isActive: core.serialization.property("is_active", core.serialization.boolean()),
    })
    .extend(MutableClinicalTrial);

export declare namespace ClinicalTrial {
    export interface Raw extends MutableClinicalTrial.Raw {
        clinical_trial_id: ClinicalTrialId.Raw;
        non_insurance_payer_id: NonInsurancePayerId.Raw;
        is_active: boolean;
    }
}
