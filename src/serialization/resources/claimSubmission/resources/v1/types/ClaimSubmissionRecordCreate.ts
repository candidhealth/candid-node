/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const ClaimSubmissionRecordCreate: core.serialization.ObjectSchema<
    serializers.claimSubmission.v1.ClaimSubmissionRecordCreate.Raw,
    CandidApi.claimSubmission.v1.ClaimSubmissionRecordCreate
> = core.serialization.object({
    submittedAt: core.serialization.property("submitted_at", core.serialization.date()),
    claimFrequencyCode: core.serialization.property(
        "claim_frequency_code",
        core.serialization
            .lazy(async () => (await import("../../../../..")).claimSubmission.v1.ClaimFrequencyTypeCode)
            .optional()
    ),
    payerResponsibility: core.serialization.property(
        "payer_responsibility",
        core.serialization
            .lazy(async () => (await import("../../../../..")).ClaimSubmissionPayerResponsibilityType)
            .optional()
    ),
    intendedSubmissionMedium: core.serialization.property(
        "intended_submission_medium",
        core.serialization.lazy(async () => (await import("../../../../..")).IntendedSubmissionMedium).optional()
    ),
});

export declare namespace ClaimSubmissionRecordCreate {
    interface Raw {
        submitted_at: string;
        claim_frequency_code?: serializers.claimSubmission.v1.ClaimFrequencyTypeCode.Raw | null;
        payer_responsibility?: serializers.ClaimSubmissionPayerResponsibilityType.Raw | null;
        intended_submission_medium?: serializers.IntendedSubmissionMedium.Raw | null;
    }
}
