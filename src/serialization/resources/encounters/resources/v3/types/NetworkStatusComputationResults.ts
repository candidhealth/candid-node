/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const NetworkStatusComputationResults: core.serialization.ObjectSchema<
    serializers.encounters.v3.NetworkStatusComputationResults.Raw,
    CandidApi.encounters.v3.NetworkStatusComputationResults
> = core.serialization.object({
    contractingStatusResult: core.serialization.property(
        "contracting_status_result",
        core.serialization.lazy(
            async () => (await import("../../../../..")).encounters.v3.AttributableContractingStatusResult
        )
    ),
    credentialingStatusResult: core.serialization.property(
        "credentialing_status_result",
        core.serialization.lazy(async () => (await import("../../../../..")).EncounterCredentialingStatusResult)
    ),
    networkStatus: core.serialization.property(
        "network_status",
        core.serialization.lazy(async () => (await import("../../../../..")).encounters.v3.NetworkStatus)
    ),
});

export declare namespace NetworkStatusComputationResults {
    interface Raw {
        contracting_status_result: serializers.encounters.v3.AttributableContractingStatusResult.Raw;
        credentialing_status_result: serializers.EncounterCredentialingStatusResult.Raw;
        network_status: serializers.encounters.v3.NetworkStatus.Raw;
    }
}
