/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const AttributableContractingStatusResult: core.serialization.Schema<
    serializers.encounters.v3.AttributableContractingStatusResult.Raw,
    CandidApi.encounters.v3.AttributableContractingStatusResult
> = core.serialization
    .union(core.serialization.discriminant("contractingStatus", "contracting_status"), {
        out_of_network: core.serialization.lazyObject(
            async () => (await import("../../../../..")).encounters.v3.OutOfNetworkContractingStatusResult
        ),
        in_network: core.serialization.lazyObject(
            async () => (await import("../../../../..")).encounters.v3.InNetworkContractingStatusResult
        ),
        unknown: core.serialization.object({}),
    })
    .transform<CandidApi.encounters.v3.AttributableContractingStatusResult>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace AttributableContractingStatusResult {
    type Raw =
        | AttributableContractingStatusResult.OutOfNetwork
        | AttributableContractingStatusResult.InNetwork
        | AttributableContractingStatusResult.Unknown;

    interface OutOfNetwork extends serializers.encounters.v3.OutOfNetworkContractingStatusResult.Raw {
        contracting_status: "out_of_network";
    }

    interface InNetwork extends serializers.encounters.v3.InNetworkContractingStatusResult.Raw {
        contracting_status: "in_network";
    }

    interface Unknown {
        contracting_status: "unknown";
    }
}
