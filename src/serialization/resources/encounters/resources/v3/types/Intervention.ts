/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const Intervention: core.serialization.ObjectSchema<
    serializers.encounters.v3.Intervention.Raw,
    CandidApi.encounters.v3.Intervention
> = core.serialization.object({
    name: core.serialization.string(),
    category: core.serialization.lazy(async () => (await import("../../../../..")).encounters.v3.InterventionCategory),
    description: core.serialization.string().optional(),
    medication: core.serialization
        .lazyObject(async () => (await import("../../../../..")).encounters.v3.Medication)
        .optional(),
    labs: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../../../..")).encounters.v3.Lab))
        .optional(),
});

export declare namespace Intervention {
    interface Raw {
        name: string;
        category: serializers.encounters.v3.InterventionCategory.Raw;
        description?: string | null;
        medication?: serializers.encounters.v3.Medication.Raw | null;
        labs?: serializers.encounters.v3.Lab.Raw[] | null;
    }
}
