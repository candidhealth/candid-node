/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const IntakeQuestion: core.serialization.ObjectSchema<
    serializers.encounters.v4.IntakeQuestion.Raw,
    CandidApi.encounters.v4.IntakeQuestion
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../../../..")).encounters.v4.IntakeQuestionId),
    text: core.serialization.string(),
    responses: core.serialization
        .list(
            core.serialization.lazyObject(
                async () => (await import("../../../../..")).encounters.v4.IntakeResponseAndFollowUps
            )
        )
        .optional(),
});

export declare namespace IntakeQuestion {
    interface Raw {
        id: serializers.encounters.v4.IntakeQuestionId.Raw;
        text: string;
        responses?: serializers.encounters.v4.IntakeResponseAndFollowUps.Raw[] | null;
    }
}
