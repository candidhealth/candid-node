// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import type * as serializers from "../../../../../index";
import { BillingNoteBaseOptional } from "../../../../billingNotes/resources/v2/types/BillingNoteBaseOptional";
import { ExternalClaimSubmissionCreateOptional } from "../../../../claimSubmission/resources/v1/types/ExternalClaimSubmissionCreateOptional";
import { StreetAddressShortZipOptional } from "../../../../commons/types/StreetAddressShortZipOptional";
import { SchemaInstanceOptional } from "../../../../customSchemas/resources/v1/types/SchemaInstanceOptional";
import { DiagnosisCreateOptional } from "../../../../diagnoses/types/DiagnosisCreateOptional";
import { BillingProviderUpdateWithOptionalAddress } from "../../../../encounterProviders/resources/v2/types/BillingProviderUpdateWithOptionalAddress";
import { InitialReferringProviderUpdateWithOptionalAddress } from "../../../../encounterProviders/resources/v2/types/InitialReferringProviderUpdateWithOptionalAddress";
import { ReferringProviderUpdateWithOptionalAddress } from "../../../../encounterProviders/resources/v2/types/ReferringProviderUpdateWithOptionalAddress";
import { RenderingProviderUpdateWithOptionalAddress } from "../../../../encounterProviders/resources/v2/types/RenderingProviderUpdateWithOptionalAddress";
import { SupervisingProviderUpdateWithOptionalAddress } from "../../../../encounterProviders/resources/v2/types/SupervisingProviderUpdateWithOptionalAddress";
import { GuarantorOptional } from "../../../../guarantor/resources/v1/types/GuarantorOptional";
import { PatientUpdateWithOptionalAddress } from "../../../../individual/types/PatientUpdateWithOptionalAddress";
import { SubscriberCreateOptional } from "../../../../individual/types/SubscriberCreateOptional";
import { EncounterServiceFacilityUpdateWithOptionalAddress } from "../../../../serviceFacility/types/EncounterServiceFacilityUpdateWithOptionalAddress";
import { ServiceLineCreateOptional } from "../../../../serviceLines/resources/v2/types/ServiceLineCreateOptional";
import { ClaimSupplementalInformationOptional } from "./ClaimSupplementalInformationOptional";
import { ClinicalNoteCategoryCreateOptional } from "./ClinicalNoteCategoryCreateOptional";
import { EncounterOptional } from "./EncounterOptional";
import { EpsdtReferralOptional } from "./EpsdtReferralOptional";
import { InterventionOptional } from "./InterventionOptional";
import { MedicationOptional } from "./MedicationOptional";
import { PatientHistoryCategoryOptional } from "./PatientHistoryCategoryOptional";
import { VitalsUpdate } from "./VitalsUpdate";

export const EncounterDeepOptional: core.serialization.ObjectSchema<
    serializers.encounters.v4.EncounterDeepOptional.Raw,
    CandidApi.encounters.v4.EncounterDeepOptional
> = core.serialization
    .object({
        vitals: VitalsUpdate.optional(),
        diagnoses: core.serialization.list(DiagnosisCreateOptional).optional(),
        clinicalNotes: core.serialization.property(
            "clinical_notes",
            core.serialization.list(ClinicalNoteCategoryCreateOptional).optional(),
        ),
        claimSupplementalInformation: core.serialization.property(
            "claim_supplemental_information",
            core.serialization.list(ClaimSupplementalInformationOptional).optional(),
        ),
        epsdtReferral: core.serialization.property("epsdt_referral", EpsdtReferralOptional.optional()),
        existingMedications: core.serialization.property(
            "existing_medications",
            core.serialization.list(MedicationOptional).optional(),
        ),
        guarantor: GuarantorOptional.optional(),
        subscriberPrimary: core.serialization.property("subscriber_primary", SubscriberCreateOptional.optional()),
        subscriberSecondary: core.serialization.property("subscriber_secondary", SubscriberCreateOptional.optional()),
        subscriberTertiary: core.serialization.property("subscriber_tertiary", SubscriberCreateOptional.optional()),
        interventions: core.serialization.list(InterventionOptional).optional(),
        schemaInstances: core.serialization.property(
            "schema_instances",
            core.serialization.list(SchemaInstanceOptional).optional(),
        ),
        externalClaimSubmission: core.serialization.property(
            "external_claim_submission",
            ExternalClaimSubmissionCreateOptional.optional(),
        ),
        serviceLines: core.serialization.property(
            "service_lines",
            core.serialization.list(ServiceLineCreateOptional).optional(),
        ),
        patientHistories: core.serialization.property(
            "patient_histories",
            core.serialization.list(PatientHistoryCategoryOptional).optional(),
        ),
        billingNotes: core.serialization.property(
            "billing_notes",
            core.serialization.list(BillingNoteBaseOptional).optional(),
        ),
        patient: PatientUpdateWithOptionalAddress.optional(),
        serviceFacility: core.serialization.property(
            "service_facility",
            EncounterServiceFacilityUpdateWithOptionalAddress.optional(),
        ),
        renderingProvider: core.serialization.property(
            "rendering_provider",
            RenderingProviderUpdateWithOptionalAddress.optional(),
        ),
        initialReferringProvider: core.serialization.property(
            "initial_referring_provider",
            InitialReferringProviderUpdateWithOptionalAddress.optional(),
        ),
        referringProvider: core.serialization.property(
            "referring_provider",
            ReferringProviderUpdateWithOptionalAddress.optional(),
        ),
        supervisingProvider: core.serialization.property(
            "supervising_provider",
            SupervisingProviderUpdateWithOptionalAddress.optional(),
        ),
        billingProvider: core.serialization.property(
            "billing_provider",
            BillingProviderUpdateWithOptionalAddress.optional(),
        ),
        payToAddress: core.serialization.property("pay_to_address", StreetAddressShortZipOptional.optional()),
    })
    .extend(EncounterOptional);

export declare namespace EncounterDeepOptional {
    export interface Raw extends EncounterOptional.Raw {
        vitals?: VitalsUpdate.Raw | null;
        diagnoses?: DiagnosisCreateOptional.Raw[] | null;
        clinical_notes?: ClinicalNoteCategoryCreateOptional.Raw[] | null;
        claim_supplemental_information?: ClaimSupplementalInformationOptional.Raw[] | null;
        epsdt_referral?: EpsdtReferralOptional.Raw | null;
        existing_medications?: MedicationOptional.Raw[] | null;
        guarantor?: GuarantorOptional.Raw | null;
        subscriber_primary?: SubscriberCreateOptional.Raw | null;
        subscriber_secondary?: SubscriberCreateOptional.Raw | null;
        subscriber_tertiary?: SubscriberCreateOptional.Raw | null;
        interventions?: InterventionOptional.Raw[] | null;
        schema_instances?: SchemaInstanceOptional.Raw[] | null;
        external_claim_submission?: ExternalClaimSubmissionCreateOptional.Raw | null;
        service_lines?: ServiceLineCreateOptional.Raw[] | null;
        patient_histories?: PatientHistoryCategoryOptional.Raw[] | null;
        billing_notes?: BillingNoteBaseOptional.Raw[] | null;
        patient?: PatientUpdateWithOptionalAddress.Raw | null;
        service_facility?: EncounterServiceFacilityUpdateWithOptionalAddress.Raw | null;
        rendering_provider?: RenderingProviderUpdateWithOptionalAddress.Raw | null;
        initial_referring_provider?: InitialReferringProviderUpdateWithOptionalAddress.Raw | null;
        referring_provider?: ReferringProviderUpdateWithOptionalAddress.Raw | null;
        supervising_provider?: SupervisingProviderUpdateWithOptionalAddress.Raw | null;
        billing_provider?: BillingProviderUpdateWithOptionalAddress.Raw | null;
        pay_to_address?: StreetAddressShortZipOptional.Raw | null;
    }
}
