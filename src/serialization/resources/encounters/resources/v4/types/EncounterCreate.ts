// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import type * as serializers from "../../../../../index";
import { FacilityTypeCode } from "../../../../commons/types/FacilityTypeCode";
import { DiagnosisCreate } from "../../../../diagnoses/types/DiagnosisCreate";
import { BillingProvider } from "../../../../encounterProviders/resources/v2/types/BillingProvider";
import { RenderingProvider } from "../../../../encounterProviders/resources/v2/types/RenderingProvider";
import { UniversalEncounterCreateBase } from "../../../../encountersUniversal/types/UniversalEncounterCreateBase";
import { ServiceLineCreate } from "../../../../serviceLines/resources/v2/types/ServiceLineCreate";

export const EncounterCreate: core.serialization.ObjectSchema<
    serializers.encounters.v4.EncounterCreate.Raw,
    CandidApi.encounters.v4.EncounterCreate
> = core.serialization
    .object({
        billingProvider: core.serialization.property("billing_provider", BillingProvider),
        diagnoses: core.serialization.list(DiagnosisCreate),
        placeOfServiceCode: core.serialization.property("place_of_service_code", FacilityTypeCode),
        renderingProvider: core.serialization.property("rendering_provider", RenderingProvider),
        serviceLines: core.serialization.property(
            "service_lines",
            core.serialization.list(ServiceLineCreate).optional(),
        ),
    })
    .extend(UniversalEncounterCreateBase);

export declare namespace EncounterCreate {
    export interface Raw extends UniversalEncounterCreateBase.Raw {
        billing_provider: BillingProvider.Raw;
        diagnoses: DiagnosisCreate.Raw[];
        place_of_service_code: FacilityTypeCode.Raw;
        rendering_provider: RenderingProvider.Raw;
        service_lines?: ServiceLineCreate.Raw[] | null;
    }
}
