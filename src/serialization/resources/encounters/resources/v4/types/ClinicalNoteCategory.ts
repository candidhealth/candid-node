/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const ClinicalNoteCategory: core.serialization.ObjectSchema<
    serializers.encounters.v4.ClinicalNoteCategory.Raw,
    CandidApi.encounters.v4.ClinicalNoteCategory
> = core.serialization.object({
    category: core.serialization.lazy(async () => (await import("../../../../..")).encounters.v4.NoteCategory),
    notes: core.serialization.list(core.serialization.string()),
    notesStructured: core.serialization.property(
        "notes_structured",
        core.serialization
            .list(
                core.serialization.lazyObject(async () => (await import("../../../../..")).encounters.v4.ClinicalNote)
            )
            .optional()
    ),
});

export declare namespace ClinicalNoteCategory {
    interface Raw {
        category: serializers.encounters.v4.NoteCategory.Raw;
        notes: string[];
        notes_structured?: serializers.encounters.v4.ClinicalNote.Raw[] | null;
    }
}
