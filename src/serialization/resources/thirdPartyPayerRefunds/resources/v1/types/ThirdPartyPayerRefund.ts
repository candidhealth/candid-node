/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { ThirdPartyPayerRefundId } from "./ThirdPartyPayerRefundId";
import { ThirdPartyPayer } from "../../../../thirdPartyPayers/resources/v1/types/ThirdPartyPayer";
import { Allocation } from "../../../../financials/types/Allocation";
import { RefundReason } from "../../../../financials/types/RefundReason";
import { InvoiceId } from "../../../../commons/types/InvoiceId";

export const ThirdPartyPayerRefund: core.serialization.ObjectSchema<
    serializers.thirdPartyPayerRefunds.v1.ThirdPartyPayerRefund.Raw,
    CandidApi.thirdPartyPayerRefunds.v1.ThirdPartyPayerRefund
> = core.serialization.object({
    thirdPartyPayerRefundId: core.serialization.property("third_party_payer_refund_id", ThirdPartyPayerRefundId),
    thirdPartyPayer: core.serialization.property("third_party_payer", ThirdPartyPayer),
    amountCents: core.serialization.property("amount_cents", core.serialization.number()),
    refundTimestamp: core.serialization.property("refund_timestamp", core.serialization.date().optional()),
    refundNote: core.serialization.property("refund_note", core.serialization.string().optional()),
    allocations: core.serialization.list(Allocation),
    refundReason: core.serialization.property("refund_reason", RefundReason.optional()),
    invoiceId: core.serialization.property("invoice_id", InvoiceId.optional()),
});

export declare namespace ThirdPartyPayerRefund {
    interface Raw {
        third_party_payer_refund_id: ThirdPartyPayerRefundId.Raw;
        third_party_payer: ThirdPartyPayer.Raw;
        amount_cents: number;
        refund_timestamp?: string | null;
        refund_note?: string | null;
        allocations: Allocation.Raw[];
        refund_reason?: RefundReason.Raw | null;
        invoice_id?: InvoiceId.Raw | null;
    }
}
