// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import type * as serializers from "../../../../../index";
import { InvoiceId } from "../../../../commons/types/InvoiceId";
import { OrganizationId } from "../../../../commons/types/OrganizationId";
import { PatientExternalId } from "../../../../commons/types/PatientExternalId";
import { Allocation } from "../../../../financials/types/Allocation";
import { PatientTransactionSource } from "../../../../financials/types/PatientTransactionSource";
import { RefundReason } from "../../../../financials/types/RefundReason";
import { PatientRefundId } from "./PatientRefundId";

export const PatientRefund: core.serialization.ObjectSchema<
    serializers.patientRefunds.v1.PatientRefund.Raw,
    CandidApi.patientRefunds.v1.PatientRefund
> = core.serialization.object({
    patientRefundId: core.serialization.property("patient_refund_id", PatientRefundId),
    organizationId: core.serialization.property("organization_id", OrganizationId),
    sourceInternalId: core.serialization.property("source_internal_id", core.serialization.string().optional()),
    refundSource: core.serialization.property("refund_source", PatientTransactionSource),
    amountCents: core.serialization.property("amount_cents", core.serialization.number()),
    patientExternalId: core.serialization.property("patient_external_id", PatientExternalId),
    refundTimestamp: core.serialization.property("refund_timestamp", core.serialization.date().optional()),
    refundNote: core.serialization.property("refund_note", core.serialization.string().optional()),
    allocations: core.serialization.list(Allocation),
    invoice: InvoiceId.optional(),
    refundReason: core.serialization.property("refund_reason", RefundReason.optional()),
});

export declare namespace PatientRefund {
    export interface Raw {
        patient_refund_id: PatientRefundId.Raw;
        organization_id: OrganizationId.Raw;
        source_internal_id?: string | null;
        refund_source: PatientTransactionSource.Raw;
        amount_cents: number;
        patient_external_id: PatientExternalId.Raw;
        refund_timestamp?: string | null;
        refund_note?: string | null;
        allocations: Allocation.Raw[];
        invoice?: InvoiceId.Raw | null;
        refund_reason?: RefundReason.Raw | null;
    }
}
