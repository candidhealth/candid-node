/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const Contract: core.serialization.ObjectSchema<serializers.Contract.Raw, CandidApi.Contract> =
    core.serialization
        .object({
            contractId: core.serialization.property(
                "contract_id",
                core.serialization.lazy(async () => (await import("../../..")).ContractId)
            ),
            contractingProvider: core.serialization.property(
                "contracting_provider",
                core.serialization.lazyObject(
                    async () => (await import("../../..")).organizationProviders.v2.OrganizationProvider
                )
            ),
            renderingProviders: core.serialization.property(
                "rendering_providers",
                core.serialization.record(
                    core.serialization.string(),
                    core.serialization.lazyObject(
                        async () => (await import("../../..")).organizationProviders.v2.OrganizationProvider
                    )
                )
            ),
            payer: core.serialization.lazyObject(async () => (await import("../../..")).Payer).optional(),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).ContractBase));

export declare namespace Contract {
    interface Raw extends serializers.ContractBase.Raw {
        contract_id: serializers.ContractId.Raw;
        contracting_provider: serializers.organizationProviders.v2.OrganizationProvider.Raw;
        rendering_providers: Record<string, serializers.organizationProviders.v2.OrganizationProvider.Raw>;
        payer?: serializers.Payer.Raw | null;
    }
}
