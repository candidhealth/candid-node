/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../..";
import * as CandidApi from "../../../../../../../api";
import * as core from "../../../../../../../core";

export const ContractCreate: core.serialization.Schema<
    serializers.contracts.v2.ContractCreate.Raw,
    CandidApi.contracts.v2.ContractCreate
> = core.serialization
    .object({
        contractingProviderId: core.serialization.property(
            "contracting_provider_id",
            core.serialization.lazy(async () => (await import("../../../../../..")).contracts.v2.ContractingProviderId)
        ),
        renderingProviderIds: core.serialization.property(
            "rendering_provider_ids",
            core.serialization.set(
                core.serialization.lazy(
                    async () => (await import("../../../../../..")).contracts.v2.RenderingProviderid
                )
            )
        ),
        payerUuid: core.serialization.property("payer_uuid", core.serialization.string()),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../../../../..")).contracts.v2.ContractBase));

export declare namespace ContractCreate {
    interface Raw extends serializers.contracts.v2.ContractBase.Raw {
        contracting_provider_id: serializers.contracts.v2.ContractingProviderId.Raw;
        rendering_provider_ids: serializers.contracts.v2.RenderingProviderid.Raw[];
        payer_uuid: string;
    }
}
