/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../..";
import * as CandidApi from "../../../../../../../api";
import * as core from "../../../../../../../core";

export const ContractUpdate: core.serialization.Schema<
    serializers.contracts.v2.ContractUpdate.Raw,
    CandidApi.contracts.v2.ContractUpdate
> = core.serialization.object({
    renderingProviderIds: core.serialization.property(
        "rendering_provider_ids",
        core.serialization
            .set(
                core.serialization.lazy(
                    async () => (await import("../../../../../..")).contracts.v2.RenderingProviderid
                )
            )
            .optional()
    ),
    effectiveDate: core.serialization.property(
        "effective_date",
        core.serialization.lazy(async () => (await import("../../../../../..")).Date_).optional()
    ),
    expirationDate: core.serialization.property(
        "expiration_date",
        core.serialization.lazy(async () => (await import("../../../../../..")).contracts.v2.DateUpdate).optional()
    ),
    regions: core.serialization
        .lazy(async () => (await import("../../../../../..")).contracts.v2.RegionsUpdate)
        .optional(),
    contractStatus: core.serialization.property(
        "contract_status",
        core.serialization.lazy(async () => (await import("../../../../../..")).contracts.v2.ContractStatus).optional()
    ),
    authorizedSignatory: core.serialization.property(
        "authorized_signatory",
        core.serialization
            .lazy(async () => (await import("../../../../../..")).contracts.v2.AuthorizedSignatoryUpdate)
            .optional()
    ),
    commercialInsuranceTypes: core.serialization.property(
        "commercial_insurance_types",
        core.serialization.lazy(async () => (await import("../../../../../..")).contracts.v2.InsuranceTypes).optional()
    ),
    medicareInsuranceTypes: core.serialization.property(
        "medicare_insurance_types",
        core.serialization.lazy(async () => (await import("../../../../../..")).contracts.v2.InsuranceTypes).optional()
    ),
    medicaidInsuranceTypes: core.serialization.property(
        "medicaid_insurance_types",
        core.serialization.lazy(async () => (await import("../../../../../..")).contracts.v2.InsuranceTypes).optional()
    ),
});

export declare namespace ContractUpdate {
    interface Raw {
        rendering_provider_ids?: serializers.contracts.v2.RenderingProviderid.Raw[] | null;
        effective_date?: serializers.Date_.Raw | null;
        expiration_date?: serializers.contracts.v2.DateUpdate.Raw | null;
        regions?: serializers.contracts.v2.RegionsUpdate.Raw | null;
        contract_status?: serializers.contracts.v2.ContractStatus.Raw | null;
        authorized_signatory?: serializers.contracts.v2.AuthorizedSignatoryUpdate.Raw | null;
        commercial_insurance_types?: serializers.contracts.v2.InsuranceTypes.Raw | null;
        medicare_insurance_types?: serializers.contracts.v2.InsuranceTypes.Raw | null;
        medicaid_insurance_types?: serializers.contracts.v2.InsuranceTypes.Raw | null;
    }
}
