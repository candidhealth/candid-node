/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const Invoice: core.serialization.ObjectSchema<serializers.Invoice.Raw, CandidApi.Invoice> =
    core.serialization.object({
        id: core.serialization.lazy(async () => (await import("../../..")).InvoiceId),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date()),
        organzationId: core.serialization.property(
            "organzation_id",
            core.serialization.lazy(async () => (await import("../../..")).OrganizationId)
        ),
        sourceId: core.serialization.property("source_id", core.serialization.string()),
        sourceCustomerId: core.serialization.property("source_customer_id", core.serialization.string()),
        patientExternalId: core.serialization.property(
            "patient_external_id",
            core.serialization.lazy(async () => (await import("../../..")).PatientExternalId)
        ),
        note: core.serialization.string().optional(),
        dueDate: core.serialization.property(
            "due_date",
            core.serialization.lazy(async () => (await import("../../..")).Date_)
        ),
        status: core.serialization.lazy(async () => (await import("../../..")).InvoiceStatus),
        url: core.serialization.string().optional(),
        customerInvoiceUrl: core.serialization.property("customer_invoice_url", core.serialization.string().optional()),
        items: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).InvoiceItem)
        ),
    });

export declare namespace Invoice {
    interface Raw {
        id: serializers.InvoiceId.Raw;
        created_at: string;
        updated_at: string;
        organzation_id: serializers.OrganizationId.Raw;
        source_id: string;
        source_customer_id: string;
        patient_external_id: serializers.PatientExternalId.Raw;
        note?: string | null;
        due_date: serializers.Date_.Raw;
        status: serializers.InvoiceStatus.Raw;
        url?: string | null;
        customer_invoice_url?: string | null;
        items: serializers.InvoiceItem.Raw[];
    }
}
