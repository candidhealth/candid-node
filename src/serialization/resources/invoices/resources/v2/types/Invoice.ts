/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const Invoice: core.serialization.ObjectSchema<
    serializers.invoices.v2.Invoice.Raw,
    CandidApi.invoices.v2.Invoice
> = core.serialization.object({
    amountCents: core.serialization.property("amount_cents", core.serialization.number()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
    organizationId: core.serialization.property(
        "organization_id",
        core.serialization.lazy(async () => (await import("../../../../..")).OrganizationId)
    ),
    invoiceDestinationMetadata: core.serialization.property(
        "invoice_destination_metadata",
        core.serialization.lazyObject(
            async () => (await import("../../../../..")).invoices.v2.InvoiceDestinationMetadata
        )
    ),
    patientExternalId: core.serialization.property(
        "patient_external_id",
        core.serialization.lazy(async () => (await import("../../../../..")).PatientExternalId)
    ),
    note: core.serialization.string().optional(),
    dueDate: core.serialization.property("due_date", core.serialization.string()),
    status: core.serialization.lazy(async () => (await import("../../../../..")).invoices.v2.InvoiceStatus),
    url: core.serialization.string().optional(),
    customerInvoiceUrl: core.serialization.property("customer_invoice_url", core.serialization.string().optional()),
    items: core.serialization.lazyObject(async () => (await import("../../../../..")).invoices.v2.InvoiceItemInfo),
});

export declare namespace Invoice {
    interface Raw {
        amount_cents: number;
        created_at: string;
        updated_at: string;
        organization_id: serializers.OrganizationId.Raw;
        invoice_destination_metadata: serializers.invoices.v2.InvoiceDestinationMetadata.Raw;
        patient_external_id: serializers.PatientExternalId.Raw;
        note?: string | null;
        due_date: string;
        status: serializers.invoices.v2.InvoiceStatus.Raw;
        url?: string | null;
        customer_invoice_url?: string | null;
        items: serializers.invoices.v2.InvoiceItemInfo.Raw;
    }
}
