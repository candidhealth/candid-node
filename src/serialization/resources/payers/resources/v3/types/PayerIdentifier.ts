/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const PayerIdentifier: core.serialization.Schema<
    serializers.payers.v3.PayerIdentifier.Raw,
    CandidApi.payers.v3.PayerIdentifier
> = core.serialization
    .union("type", {
        payer_info: core.serialization.lazyObject(async () => (await import("../../../../..")).payers.v3.PayerInfo),
        payer_uuid: core.serialization.object({
            value: core.serialization.lazy(async () => (await import("../../../../..")).payers.v3.PayerUuid),
        }),
    })
    .transform<CandidApi.payers.v3.PayerIdentifier>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace PayerIdentifier {
    type Raw = PayerIdentifier.PayerInfo | PayerIdentifier.PayerUuid;

    interface PayerInfo extends serializers.payers.v3.PayerInfo.Raw {
        type: "payer_info";
    }

    interface PayerUuid {
        type: "payer_uuid";
        value: serializers.payers.v3.PayerUuid.Raw;
    }
}
