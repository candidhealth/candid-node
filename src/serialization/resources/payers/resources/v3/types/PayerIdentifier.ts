/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { PayerInfo } from "./PayerInfo";
import { PayerUuid } from "./PayerUuid";

export const PayerIdentifier: core.serialization.Schema<
    serializers.payers.v3.PayerIdentifier.Raw,
    CandidApi.payers.v3.PayerIdentifier
> = core.serialization
    .union("type", {
        payer_info: PayerInfo,
        payer_uuid: core.serialization.object({
            value: PayerUuid,
        }),
    })
    .transform<CandidApi.payers.v3.PayerIdentifier>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace PayerIdentifier {
    export type Raw = PayerIdentifier.PayerInfo | PayerIdentifier.PayerUuid;

    export interface PayerInfo extends PayerInfo.Raw {
        type: "payer_info";
    }

    export interface PayerUuid {
        type: "payer_uuid";
        value: PayerUuid.Raw;
    }
}
