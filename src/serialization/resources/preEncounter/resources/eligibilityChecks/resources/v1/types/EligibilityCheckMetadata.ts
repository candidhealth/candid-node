/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { ServiceTypeCode } from "../../../../coverages/resources/v1/types/ServiceTypeCode";
import { EligibilityCheckStatus } from "./EligibilityCheckStatus";
import { UserId } from "../../../../common/types/UserId";

export const EligibilityCheckMetadata: core.serialization.ObjectSchema<
    serializers.preEncounter.eligibilityChecks.v1.EligibilityCheckMetadata.Raw,
    CandidApi.preEncounter.eligibilityChecks.v1.EligibilityCheckMetadata
> = core.serialization.object({
    checkId: core.serialization.property("check_id", core.serialization.string()),
    serviceCode: core.serialization.property("service_code", ServiceTypeCode),
    status: EligibilityCheckStatus,
    initiatedBy: core.serialization.property("initiated_by", UserId),
    initiatedAt: core.serialization.property("initiated_at", core.serialization.date()),
});

export declare namespace EligibilityCheckMetadata {
    export interface Raw {
        check_id: string;
        service_code: ServiceTypeCode.Raw;
        status: EligibilityCheckStatus.Raw;
        initiated_by: UserId.Raw;
        initiated_at: string;
    }
}
