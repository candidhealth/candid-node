/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { EligibilityRequest } from "./EligibilityRequest";
import { ParsedResponse } from "./ParsedResponse";
import { RequestCorrection } from "./RequestCorrection";

export const EligibilityCheck: core.serialization.ObjectSchema<
    serializers.preEncounter.eligibilityChecks.v1.EligibilityCheck.Raw,
    CandidApi.preEncounter.eligibilityChecks.v1.EligibilityCheck
> = core.serialization.object({
    errors: core.serialization.unknown().optional(),
    request: EligibilityRequest.optional(),
    response: core.serialization.unknown(),
    parsedResponse: core.serialization.property("parsed_response", ParsedResponse.optional()),
    requestCorrections: core.serialization.property(
        "request_corrections",
        core.serialization.list(RequestCorrection).optional(),
    ),
});

export declare namespace EligibilityCheck {
    export interface Raw {
        errors?: unknown | null;
        request?: EligibilityRequest.Raw | null;
        response?: unknown;
        parsed_response?: ParsedResponse.Raw | null;
        request_corrections?: RequestCorrection.Raw[] | null;
    }
}
