// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import type * as serializers from "../../../../../../../index";
import { CoordinationOfBenefitsRecommendation } from "./CoordinationOfBenefitsRecommendation";
import { MedicareAdvantageRecommendation } from "./MedicareAdvantageRecommendation";

export const EligibilityRecommendationPayload: core.serialization.Schema<
    serializers.preEncounter.eligibilityChecks.v1.EligibilityRecommendationPayload.Raw,
    CandidApi.preEncounter.eligibilityChecks.v1.EligibilityRecommendationPayload
> = core.serialization
    .union("type", {
        MEDICARE_ADVANTAGE: MedicareAdvantageRecommendation,
        COORDINATION_OF_BENEFITS: CoordinationOfBenefitsRecommendation,
    })
    .transform<CandidApi.preEncounter.eligibilityChecks.v1.EligibilityRecommendationPayload>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace EligibilityRecommendationPayload {
    export type Raw =
        | EligibilityRecommendationPayload.MedicareAdvantage
        | EligibilityRecommendationPayload.CoordinationOfBenefits;

    export interface MedicareAdvantage extends MedicareAdvantageRecommendation.Raw {
        type: "MEDICARE_ADVANTAGE";
    }

    export interface CoordinationOfBenefits extends CoordinationOfBenefitsRecommendation.Raw {
        type: "COORDINATION_OF_BENEFITS";
    }
}
