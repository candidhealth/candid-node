// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import type * as serializers from "../../../../../../../index";
import { BaseModel } from "../../../../common/types/BaseModel";
import { EligibilityRecommendationPatientInfo } from "./EligibilityRecommendationPatientInfo";
import { EligibilityRecommendationPayload } from "./EligibilityRecommendationPayload";

export const EligibilityRecommendation: core.serialization.ObjectSchema<
    serializers.preEncounter.eligibilityChecks.v1.EligibilityRecommendation.Raw,
    CandidApi.preEncounter.eligibilityChecks.v1.EligibilityRecommendation
> = core.serialization
    .object({
        id: core.serialization.string(),
        recommendation: EligibilityRecommendationPayload,
        patient: EligibilityRecommendationPatientInfo,
    })
    .extend(BaseModel);

export declare namespace EligibilityRecommendation {
    export interface Raw extends BaseModel.Raw {
        id: string;
        recommendation: EligibilityRecommendationPayload.Raw;
        patient: EligibilityRecommendationPatientInfo.Raw;
    }
}
