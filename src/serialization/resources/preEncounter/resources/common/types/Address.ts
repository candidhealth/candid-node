/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { AddressUse } from "./AddressUse";
import { Period } from "./Period";

export const Address: core.serialization.ObjectSchema<
    serializers.preEncounter.Address.Raw,
    CandidApi.preEncounter.Address
> = core.serialization.object({
    use: AddressUse,
    line: core.serialization.list(core.serialization.string()),
    city: core.serialization.string(),
    state: core.serialization.string(),
    postalCode: core.serialization.property("postal_code", core.serialization.string()),
    country: core.serialization.string(),
    period: Period.optional(),
});

export declare namespace Address {
    export interface Raw {
        use: AddressUse.Raw;
        line: string[];
        city: string;
        state: string;
        postal_code: string;
        country: string;
        period?: Period.Raw | null;
    }
}
