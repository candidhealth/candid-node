// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import type * as serializers from "../../../../../index";
import { CanonicalClinicalTrialAssociation } from "./CanonicalClinicalTrialAssociation";
import { CanonicalNonInsurancePayerId } from "./CanonicalNonInsurancePayerId";
import { Period } from "./Period";

export const CanonicalNonInsurancePayerAssociation: core.serialization.ObjectSchema<
    serializers.preEncounter.CanonicalNonInsurancePayerAssociation.Raw,
    CandidApi.preEncounter.CanonicalNonInsurancePayerAssociation
> = core.serialization.object({
    id: CanonicalNonInsurancePayerId,
    memberId: core.serialization.property("member_id", core.serialization.string().optional()),
    period: Period.optional(),
    clinicalTrialInfo: core.serialization.property(
        "clinical_trial_info",
        core.serialization.list(CanonicalClinicalTrialAssociation).optional(),
    ),
});

export declare namespace CanonicalNonInsurancePayerAssociation {
    export interface Raw {
        id: CanonicalNonInsurancePayerId.Raw;
        member_id?: string | null;
        period?: Period.Raw | null;
        clinical_trial_info?: CanonicalClinicalTrialAssociation.Raw[] | null;
    }
}
