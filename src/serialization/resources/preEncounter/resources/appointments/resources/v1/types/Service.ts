/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { UniversalServiceIdentifier } from "./UniversalServiceIdentifier";

export const Service: core.serialization.ObjectSchema<
    serializers.preEncounter.appointments.v1.Service.Raw,
    CandidApi.preEncounter.appointments.v1.Service
> = core.serialization.object({
    universalServiceIdentifier: core.serialization.property(
        "universal_service_identifier",
        UniversalServiceIdentifier.optional(),
    ),
    startTimestamp: core.serialization.property("start_timestamp", core.serialization.date().optional()),
});

export declare namespace Service {
    export interface Raw {
        universal_service_identifier?: UniversalServiceIdentifier.Raw | null;
        start_timestamp?: string | null;
    }
}
