/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { ImageId } from "./ImageId";
import { BaseModel } from "../../../../common/types/BaseModel";
import { MutableImage } from "./MutableImage";

export const Image: core.serialization.ObjectSchema<
    serializers.preEncounter.images.v1.Image.Raw,
    CandidApi.preEncounter.images.v1.Image
> = core.serialization
    .object({
        id: ImageId,
        signedUrl: core.serialization.property("signed_url", core.serialization.string()),
    })
    .extend(BaseModel)
    .extend(MutableImage);

export declare namespace Image {
    export interface Raw extends BaseModel.Raw, MutableImage.Raw {
        id: ImageId.Raw;
        signed_url: string;
    }
}
