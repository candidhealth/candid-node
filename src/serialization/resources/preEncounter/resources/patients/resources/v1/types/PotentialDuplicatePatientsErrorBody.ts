/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { PotentialDuplicatePatient } from "./PotentialDuplicatePatient";
import { ErrorBase } from "../../../../common/types/ErrorBase";

export const PotentialDuplicatePatientsErrorBody: core.serialization.ObjectSchema<
    serializers.preEncounter.patients.v1.PotentialDuplicatePatientsErrorBody.Raw,
    CandidApi.preEncounter.patients.v1.PotentialDuplicatePatientsErrorBody
> = core.serialization
    .object({
        code: core.serialization.stringLiteral("DUPLICATE_PATIENT"),
        potentialDuplicates: core.serialization.property(
            "potential_duplicates",
            core.serialization.list(PotentialDuplicatePatient)
        ),
    })
    .extend(ErrorBase);

export declare namespace PotentialDuplicatePatientsErrorBody {
    interface Raw extends ErrorBase.Raw {
        code: "DUPLICATE_PATIENT";
        potential_duplicates: PotentialDuplicatePatient.Raw[];
    }
}
