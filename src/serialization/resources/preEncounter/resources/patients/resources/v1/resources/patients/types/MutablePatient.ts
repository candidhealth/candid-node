/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../../../index";
import * as CandidApi from "../../../../../../../../../../api/index";
import * as core from "../../../../../../../../../../core";
import { HumanName } from "../../../../../../common/types/HumanName";
import { Gender } from "../../../../../../common/types/Gender";
import { MaritalStatus } from "./MaritalStatus";
import { Address } from "../../../../../../common/types/Address";
import { ContactPoint } from "../../../../../../common/types/ContactPoint";
import { ExternalProvenance } from "./ExternalProvenance";
import { Contact } from "./Contact";
import { ExternalProvider } from "./ExternalProvider";

export const MutablePatient: core.serialization.ObjectSchema<
    serializers.preEncounter.patients.v1.MutablePatient.Raw,
    CandidApi.preEncounter.patients.v1.MutablePatient
> = core.serialization.object({
    name: HumanName,
    otherNames: core.serialization.property("other_names", core.serialization.list(HumanName)),
    gender: Gender,
    birthDate: core.serialization.property("birth_date", core.serialization.string()),
    maritalStatus: core.serialization.property("marital_status", MaritalStatus.optional()),
    deceased: core.serialization.date().optional(),
    multipleBirth: core.serialization.property("multiple_birth", core.serialization.number().optional()),
    primaryAddress: core.serialization.property("primary_address", Address),
    otherAddresses: core.serialization.property("other_addresses", core.serialization.list(Address)),
    primaryTelecom: core.serialization.property("primary_telecom", ContactPoint),
    otherTelecoms: core.serialization.property("other_telecoms", core.serialization.list(ContactPoint)),
    photo: core.serialization.string().optional(),
    language: core.serialization.string().optional(),
    externalProvenance: core.serialization.property("external_provenance", ExternalProvenance.optional()),
    contacts: core.serialization.list(Contact),
    generalPractitioners: core.serialization.property(
        "general_practitioners",
        core.serialization.list(ExternalProvider)
    ),
});

export declare namespace MutablePatient {
    interface Raw {
        name: HumanName.Raw;
        other_names: HumanName.Raw[];
        gender: Gender.Raw;
        birth_date: string;
        marital_status?: MaritalStatus.Raw | null;
        deceased?: string | null;
        multiple_birth?: number | null;
        primary_address: Address.Raw;
        other_addresses: Address.Raw[];
        primary_telecom: ContactPoint.Raw;
        other_telecoms: ContactPoint.Raw[];
        photo?: string | null;
        language?: string | null;
        external_provenance?: ExternalProvenance.Raw | null;
        contacts: Contact.Raw[];
        general_practitioners: ExternalProvider.Raw[];
    }
}
