/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { PatientId } from "../../../../common/types/PatientId";
import { BaseModel } from "../../../../common/types/BaseModel";
import { MutablePatient } from "./MutablePatient";

export const Patient: core.serialization.ObjectSchema<
    serializers.preEncounter.patients.v1.Patient.Raw,
    CandidApi.preEncounter.patients.v1.Patient
> = core.serialization
    .object({
        id: PatientId,
        mrn: core.serialization.string(),
    })
    .extend(BaseModel)
    .extend(MutablePatient);

export declare namespace Patient {
    interface Raw extends BaseModel.Raw, MutablePatient.Raw {
        id: PatientId.Raw;
        mrn: string;
    }
}
