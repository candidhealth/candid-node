/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { CoverageStatus } from "./CoverageStatus";
import { Subscriber } from "./Subscriber";
import { Relationship } from "../../common/types/Relationship";
import { PatientId } from "../../patients/types/PatientId";
import { InsurancePlan } from "./InsurancePlan";

export const MutableCoverage: core.serialization.ObjectSchema<
    serializers.preEncounter.MutableCoverage.Raw,
    CandidApi.preEncounter.MutableCoverage
> = core.serialization.object({
    status: CoverageStatus,
    subscriber: Subscriber,
    relationship: Relationship,
    patient: PatientId,
    insurancePlan: InsurancePlan,
    verified: core.serialization.boolean(),
});

export declare namespace MutableCoverage {
    interface Raw {
        status: CoverageStatus.Raw;
        subscriber: Subscriber.Raw;
        relationship: Relationship.Raw;
        patient: PatientId.Raw;
        insurancePlan: InsurancePlan.Raw;
        verified: boolean;
    }
}
