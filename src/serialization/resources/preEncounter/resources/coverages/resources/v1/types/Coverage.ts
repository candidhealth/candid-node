/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { CoverageId } from "../../../../common/types/CoverageId";
import { BaseModel } from "../../../../common/types/BaseModel";
import { MutableCoverage } from "./MutableCoverage";

export const Coverage: core.serialization.ObjectSchema<
    serializers.preEncounter.coverages.v1.Coverage.Raw,
    CandidApi.preEncounter.coverages.v1.Coverage
> = core.serialization
    .object({
        id: CoverageId,
    })
    .extend(BaseModel)
    .extend(MutableCoverage);

export declare namespace Coverage {
    interface Raw extends BaseModel.Raw, MutableCoverage.Raw {
        id: CoverageId.Raw;
    }
}
