/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { ServiceTypeCode } from "./ServiceTypeCode";
import { ServiceCoverageDetails } from "./ServiceCoverageDetails";

export const ServiceCoverage: core.serialization.ObjectSchema<
    serializers.preEncounter.coverages.v1.ServiceCoverage.Raw,
    CandidApi.preEncounter.coverages.v1.ServiceCoverage
> = core.serialization.object({
    serviceCode: core.serialization.property("service_code", ServiceTypeCode),
    inNetwork: core.serialization.property("in_network", ServiceCoverageDetails.optional()),
    outOfNetwork: core.serialization.property("out_of_network", ServiceCoverageDetails.optional()),
});

export declare namespace ServiceCoverage {
    interface Raw {
        service_code: ServiceTypeCode.Raw;
        in_network?: ServiceCoverageDetails.Raw | null;
        out_of_network?: ServiceCoverageDetails.Raw | null;
    }
}
