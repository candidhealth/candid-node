/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../../../index";
import * as CandidApi from "../../../../../../../../../../api/index";
import * as core from "../../../../../../../../../../core";
import { HumanName } from "../../../../../../common/types/HumanName";
import { Gender } from "../../../../../../common/types/Gender";

export const Subscriber: core.serialization.ObjectSchema<
    serializers.preEncounter.coverages.v1.Subscriber.Raw,
    CandidApi.preEncounter.coverages.v1.Subscriber
> = core.serialization.object({
    name: HumanName,
    dateOfBirth: core.serialization.property("date_of_birth", core.serialization.string()),
    gender: Gender,
});

export declare namespace Subscriber {
    interface Raw {
        name: HumanName.Raw;
        date_of_birth: string;
        gender: Gender.Raw;
    }
}
