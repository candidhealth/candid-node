/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { PayerId } from "../../../../common/types/PayerId";
import { NetworkType } from "./NetworkType";
import { Period } from "../../../../common/types/Period";

export const InsurancePlan: core.serialization.ObjectSchema<
    serializers.preEncounter.coverages.v1.InsurancePlan.Raw,
    CandidApi.preEncounter.coverages.v1.InsurancePlan
> = core.serialization.object({
    memberId: core.serialization.property("member_id", core.serialization.string()),
    payerId: core.serialization.property("payer_id", PayerId),
    payerName: core.serialization.property("payer_name", core.serialization.string()),
    groupNumber: core.serialization.property("group_number", core.serialization.string().optional()),
    name: core.serialization.string().optional(),
    type: NetworkType.optional(),
    period: Period.optional(),
    insuranceCardImageLocator: core.serialization.property(
        "insurance_card_image_locator",
        core.serialization.string().optional()
    ),
});

export declare namespace InsurancePlan {
    interface Raw {
        member_id: string;
        payer_id: PayerId.Raw;
        payer_name: string;
        group_number?: string | null;
        name?: string | null;
        type?: NetworkType.Raw | null;
        period?: Period.Raw | null;
        insurance_card_image_locator?: string | null;
    }
}
