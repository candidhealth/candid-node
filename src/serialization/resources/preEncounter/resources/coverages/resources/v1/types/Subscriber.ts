/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { HumanName } from "../../../../common/types/HumanName";
import { Sex } from "../../../../common/types/Sex";
import { Address } from "../../../../common/types/Address";

export const Subscriber: core.serialization.ObjectSchema<
    serializers.preEncounter.coverages.v1.Subscriber.Raw,
    CandidApi.preEncounter.coverages.v1.Subscriber
> = core.serialization.object({
    name: HumanName,
    dateOfBirth: core.serialization.property("date_of_birth", core.serialization.string()),
    biologicalSex: core.serialization.property("biological_sex", Sex),
    address: Address.optional(),
});

export declare namespace Subscriber {
    export interface Raw {
        name: HumanName.Raw;
        date_of_birth: string;
        biological_sex: Sex.Raw;
        address?: Address.Raw | null;
    }
}
