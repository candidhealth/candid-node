/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as CandidApi from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";

export const Address: core.serialization.ObjectSchema<
    serializers.preEncounter.coverages.v1.Address.Raw,
    CandidApi.preEncounter.coverages.v1.Address
> = core.serialization.object({
    address1: core.serialization.string().optional(),
    address2: core.serialization.string().optional(),
    city: core.serialization.string().optional(),
    state: core.serialization.string().optional(),
    postalCode: core.serialization.property("postal_code", core.serialization.string().optional()),
    countryCode: core.serialization.property("country_code", core.serialization.string().optional()),
    countrySubDivisionCode: core.serialization.property(
        "country_sub_division_code",
        core.serialization.string().optional(),
    ),
});

export declare namespace Address {
    export interface Raw {
        address1?: string | null;
        address2?: string | null;
        city?: string | null;
        state?: string | null;
        postal_code?: string | null;
        country_code?: string | null;
        country_sub_division_code?: string | null;
    }
}
