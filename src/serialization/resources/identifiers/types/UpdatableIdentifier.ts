// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../api/index";
import * as core from "../../../../core";
import type * as serializers from "../../../index";
import { IdentifierCreate } from "./IdentifierCreate";
import { IdentifierId } from "./IdentifierId";
import { IdentifierUpdate } from "./IdentifierUpdate";

export const UpdatableIdentifier: core.serialization.Schema<
    serializers.UpdatableIdentifier.Raw,
    CandidApi.UpdatableIdentifier
> = core.serialization
    .union("type", {
        add: IdentifierCreate,
        update: IdentifierUpdate,
        remove: core.serialization.object({
            value: IdentifierId,
        }),
    })
    .transform<CandidApi.UpdatableIdentifier>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace UpdatableIdentifier {
    export type Raw = UpdatableIdentifier.Add | UpdatableIdentifier.Update | UpdatableIdentifier.Remove;

    export interface Add extends IdentifierCreate.Raw {
        type: "add";
    }

    export interface Update extends IdentifierUpdate.Raw {
        type: "update";
    }

    export interface Remove {
        type: "remove";
        value: IdentifierId.Raw;
    }
}
