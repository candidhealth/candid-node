/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const IdentifierUpdate: core.serialization.ObjectSchema<
    serializers.IdentifierUpdate.Raw,
    CandidApi.IdentifierUpdate
> = core.serialization.object({
    identifierId: core.serialization.property(
        "identifier_id",
        core.serialization.lazy(async () => (await import("../../..")).IdentifierId)
    ),
    identifierCode: core.serialization.property(
        "identifier_code",
        core.serialization.lazy(async () => (await import("../../..")).IdentifierCode).optional()
    ),
    identifierValue: core.serialization.property(
        "identifier_value",
        core.serialization.lazy(async () => (await import("../../..")).IdentifierValue).optional()
    ),
    period: core.serialization.lazy(async () => (await import("../../..")).RemovableDateRangeOptionalEnd).optional(),
});

export declare namespace IdentifierUpdate {
    interface Raw {
        identifier_id: serializers.IdentifierId.Raw;
        identifier_code?: serializers.IdentifierCode.Raw | null;
        identifier_value?: serializers.IdentifierValue.Raw | null;
        period?: serializers.RemovableDateRangeOptionalEnd.Raw | null;
    }
}
