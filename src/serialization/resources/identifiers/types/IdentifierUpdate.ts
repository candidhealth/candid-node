/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as CandidApi from "../../../../api/index";
import * as core from "../../../../core";
import { IdentifierId } from "./IdentifierId";
import { IdentifierCode } from "./IdentifierCode";
import { IdentifierValue } from "./IdentifierValue";
import { RemovableDateRangeOptionalEnd } from "../../commons/types/RemovableDateRangeOptionalEnd";

export const IdentifierUpdate: core.serialization.ObjectSchema<
    serializers.IdentifierUpdate.Raw,
    CandidApi.IdentifierUpdate
> = core.serialization.object({
    identifierId: core.serialization.property("identifier_id", IdentifierId),
    identifierCode: core.serialization.property("identifier_code", IdentifierCode.optional()),
    identifierValue: core.serialization.property("identifier_value", IdentifierValue.optional()),
    period: RemovableDateRangeOptionalEnd.optional(),
});

export declare namespace IdentifierUpdate {
    export interface Raw {
        identifier_id: IdentifierId.Raw;
        identifier_code?: IdentifierCode.Raw | null;
        identifier_value?: IdentifierValue.Raw | null;
        period?: RemovableDateRangeOptionalEnd.Raw | null;
    }
}
