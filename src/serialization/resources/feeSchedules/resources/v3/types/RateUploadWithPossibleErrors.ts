/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { RateUpload } from "./RateUpload";
import { Rate } from "./Rate";
import { ValidationError } from "./ValidationError";

export const RateUploadWithPossibleErrors: core.serialization.ObjectSchema<
    serializers.feeSchedules.v3.RateUploadWithPossibleErrors.Raw,
    CandidApi.feeSchedules.v3.RateUploadWithPossibleErrors
> = core.serialization.object({
    rateUpload: core.serialization.property("rate_upload", RateUpload),
    existingRate: core.serialization.property("existing_rate", Rate.optional()),
    possibleErrors: core.serialization.property("possible_errors", core.serialization.list(ValidationError)),
});

export declare namespace RateUploadWithPossibleErrors {
    export interface Raw {
        rate_upload: RateUpload.Raw;
        existing_rate?: Rate.Raw | null;
        possible_errors: ValidationError.Raw[];
    }
}
