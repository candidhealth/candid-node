// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import type * as serializers from "../../../../../index";
import { NewRate } from "./NewRate";
import { NewRateVersion } from "./NewRateVersion";

export const RateUpload: core.serialization.Schema<
    serializers.feeSchedules.v3.RateUpload.Raw,
    CandidApi.feeSchedules.v3.RateUpload
> = core.serialization
    .union("type", {
        new_rate: NewRate,
        new_version: NewRateVersion,
    })
    .transform<CandidApi.feeSchedules.v3.RateUpload>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace RateUpload {
    export type Raw = RateUpload.NewRate | RateUpload.NewVersion;

    export interface NewRate extends NewRate.Raw {
        type: "new_rate";
    }

    export interface NewVersion extends NewRateVersion.Raw {
        type: "new_version";
    }
}
