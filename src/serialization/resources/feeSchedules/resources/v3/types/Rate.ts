/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { RateId } from "../../../../commons/types/RateId";
import { Dimensions } from "./Dimensions";
import { UserId } from "../../../../commons/types/UserId";
import { RateEntry } from "./RateEntry";

export const Rate: core.serialization.ObjectSchema<
    serializers.feeSchedules.v3.Rate.Raw,
    CandidApi.feeSchedules.v3.Rate
> = core.serialization.object({
    rateId: core.serialization.property("rate_id", RateId),
    dimensions: Dimensions,
    version: core.serialization.number(),
    updatedAt: core.serialization.property("updated_at", core.serialization.string()),
    updatedBy: core.serialization.property("updated_by", UserId),
    entries: core.serialization.list(RateEntry),
});

export declare namespace Rate {
    export interface Raw {
        rate_id: RateId.Raw;
        dimensions: Dimensions.Raw;
        version: number;
        updated_at: string;
        updated_by: UserId.Raw;
        entries: RateEntry.Raw[];
    }
}
