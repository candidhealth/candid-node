/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const Rate: core.serialization.ObjectSchema<
    serializers.feeSchedules.v3.Rate.Raw,
    CandidApi.feeSchedules.v3.Rate
> = core.serialization.object({
    rateId: core.serialization.property(
        "rate_id",
        core.serialization.lazy(async () => (await import("../../../../..")).RateId)
    ),
    dimensions: core.serialization.lazyObject(async () => (await import("../../../../..")).feeSchedules.v3.Dimensions),
    version: core.serialization.number(),
    updatedAt: core.serialization.property("updated_at", core.serialization.string()),
    updatedBy: core.serialization.property(
        "updated_by",
        core.serialization.lazy(async () => (await import("../../../../..")).UserId)
    ),
    entries: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../..")).feeSchedules.v3.RateEntry)
    ),
});

export declare namespace Rate {
    interface Raw {
        rate_id: serializers.RateId.Raw;
        dimensions: serializers.feeSchedules.v3.Dimensions.Raw;
        version: number;
        updated_at: string;
        updated_by: serializers.UserId.Raw;
        entries: serializers.feeSchedules.v3.RateEntry.Raw[];
    }
}
