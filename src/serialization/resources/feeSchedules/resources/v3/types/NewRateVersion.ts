/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const NewRateVersion: core.serialization.ObjectSchema<
    serializers.feeSchedules.v3.NewRateVersion.Raw,
    CandidApi.feeSchedules.v3.NewRateVersion
> = core.serialization.object({
    rateId: core.serialization.property(
        "rate_id",
        core.serialization.lazy(async () => (await import("../../../../..")).RateId)
    ),
    previousVersion: core.serialization.property("previous_version", core.serialization.number()),
    entries: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../..")).feeSchedules.v3.RateEntry)
    ),
});

export declare namespace NewRateVersion {
    interface Raw {
        rate_id: serializers.RateId.Raw;
        previous_version: number;
        entries: serializers.feeSchedules.v3.RateEntry.Raw[];
    }
}
