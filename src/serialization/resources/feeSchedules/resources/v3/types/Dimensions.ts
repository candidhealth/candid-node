// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import type * as serializers from "../../../../../index";
import { FacilityTypeCode } from "../../../../commons/types/FacilityTypeCode";
import { NetworkType } from "../../../../commons/types/NetworkType";
import { PayerPlanGroupId } from "../../../../commons/types/PayerPlanGroupId";
import { ProcedureModifier } from "../../../../commons/types/ProcedureModifier";
import { State } from "../../../../commons/types/State";
import { LicenseType } from "../../../../organizationProviders/resources/v2/types/LicenseType";
import { OrganizationProviderId } from "../../../../organizationProviders/resources/v2/types/OrganizationProviderId";
import { PayerUuid } from "../../../../payers/resources/v3/types/PayerUuid";

export const Dimensions: core.serialization.ObjectSchema<
    serializers.feeSchedules.v3.Dimensions.Raw,
    CandidApi.feeSchedules.v3.Dimensions
> = core.serialization.object({
    payerUuid: core.serialization.property("payer_uuid", PayerUuid),
    organizationBillingProviderId: core.serialization.property(
        "organization_billing_provider_id",
        OrganizationProviderId,
    ),
    states: core.serialization.set(State),
    zipCodes: core.serialization.property("zip_codes", core.serialization.set(core.serialization.string())),
    licenseTypes: core.serialization.property("license_types", core.serialization.set(LicenseType)),
    facilityTypeCodes: core.serialization.property("facility_type_codes", core.serialization.set(FacilityTypeCode)),
    networkTypes: core.serialization.property("network_types", core.serialization.set(NetworkType)),
    payerPlanGroupIds: core.serialization.property("payer_plan_group_ids", core.serialization.set(PayerPlanGroupId)),
    cptCode: core.serialization.property("cpt_code", core.serialization.string()),
    modifiers: core.serialization.set(ProcedureModifier),
});

export declare namespace Dimensions {
    export interface Raw {
        payer_uuid: PayerUuid.Raw;
        organization_billing_provider_id: OrganizationProviderId.Raw;
        states: State.Raw[];
        zip_codes: string[];
        license_types: LicenseType.Raw[];
        facility_type_codes: FacilityTypeCode.Raw[];
        network_types: NetworkType.Raw[];
        payer_plan_group_ids: PayerPlanGroupId.Raw[];
        cpt_code: string;
        modifiers: ProcedureModifier.Raw[];
    }
}
