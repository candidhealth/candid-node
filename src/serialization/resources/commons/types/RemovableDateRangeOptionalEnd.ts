/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const RemovableDateRangeOptionalEnd: core.serialization.Schema<
    serializers.RemovableDateRangeOptionalEnd.Raw,
    CandidApi.RemovableDateRangeOptionalEnd
> = core.serialization
    .union("type", {
        date_range: core.serialization.lazyObject(async () => (await import("../../..")).DateRangeOptionalEnd),
        remove: core.serialization.object({}),
    })
    .transform<CandidApi.RemovableDateRangeOptionalEnd>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace RemovableDateRangeOptionalEnd {
    type Raw = RemovableDateRangeOptionalEnd.DateRange | RemovableDateRangeOptionalEnd.Remove;

    interface DateRange extends serializers.DateRangeOptionalEnd.Raw {
        type: "date_range";
    }

    interface Remove {
        type: "remove";
    }
}
