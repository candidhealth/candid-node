// This file was auto-generated by Fern from our API Definition.

import type * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import type * as serializers from "../../../../../index";
import { StreetAddressLongZip } from "../../../../commons/types/StreetAddressLongZip";
import { EncounterProviderBase } from "./EncounterProviderBase";

export const SupervisingProvider: core.serialization.ObjectSchema<
    serializers.encounterProviders.v2.SupervisingProvider.Raw,
    CandidApi.encounterProviders.v2.SupervisingProvider
> = core.serialization
    .object({
        npi: core.serialization.string(),
        taxonomyCode: core.serialization.property("taxonomy_code", core.serialization.string().optional()),
        address: StreetAddressLongZip.optional(),
    })
    .extend(EncounterProviderBase);

export declare namespace SupervisingProvider {
    export interface Raw extends EncounterProviderBase.Raw {
        npi: string;
        taxonomy_code?: string | null;
        address?: StreetAddressLongZip.Raw | null;
    }
}
