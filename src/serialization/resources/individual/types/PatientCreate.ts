/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { CandidApi } from "";
import * as core from "../../../../core";

export const PatientCreate: core.serialization.ObjectSchema<serializers.PatientCreate.Raw, CandidApi.PatientCreate> =
    core.serialization
        .object({
            externalId: core.serialization.property("external_id", core.serialization.string()),
            dateOfBirth: core.serialization.property(
                "date_of_birth",
                core.serialization.lazy(async () => (await import("../../..")).Date)
            ),
            address: core.serialization.lazyObject(async () => (await import("../../..")).StreetAddressShortZip),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).IndividualBase));

export declare namespace PatientCreate {
    interface Raw extends serializers.IndividualBase.Raw {
        external_id: string;
        date_of_birth: serializers.Date.Raw;
        address: serializers.StreetAddressShortZip.Raw;
    }
}
