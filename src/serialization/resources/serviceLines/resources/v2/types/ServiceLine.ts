/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { ProcedureModifier } from "../../../../commons/types/ProcedureModifier";
import { DiagnosisId } from "../../../../diagnoses/types/DiagnosisId";
import { DrugIdentification } from "./DrugIdentification";
import { ServiceLineEraData } from "./ServiceLineEraData";
import { ServiceLineAdjustment } from "./ServiceLineAdjustment";
import { Invoice } from "../../../../invoices/types/Invoice";
import { InvoiceInfo } from "../../../../invoices/resources/v2/types/InvoiceInfo";
import { ServiceLineDenialReason } from "./ServiceLineDenialReason";
import { FacilityTypeCode } from "../../../../commons/types/FacilityTypeCode";
import { ServiceLineId } from "../../../../commons/types/ServiceLineId";
import { EncounterProvider } from "../../../../encounterProviders/resources/v2/types/EncounterProvider";
import { Decimal } from "../../../../commons/types/Decimal";
import { ServiceLineUnits } from "../../../../commons/types/ServiceLineUnits";
import { ClaimId } from "../../../../commons/types/ClaimId";
import { DateRangeOptionalEnd } from "../../../../commons/types/DateRangeOptionalEnd";

export const ServiceLine: core.serialization.ObjectSchema<
    serializers.serviceLines.v2.ServiceLine.Raw,
    CandidApi.serviceLines.v2.ServiceLine
> = core.serialization.object({
    modifiers: core.serialization.list(ProcedureModifier).optional(),
    chargeAmountCents: core.serialization.property("charge_amount_cents", core.serialization.number().optional()),
    allowedAmountCents: core.serialization.property("allowed_amount_cents", core.serialization.number().optional()),
    insuranceBalanceCents: core.serialization.property(
        "insurance_balance_cents",
        core.serialization.number().optional()
    ),
    patientBalanceCents: core.serialization.property("patient_balance_cents", core.serialization.number().optional()),
    paidAmountCents: core.serialization.property("paid_amount_cents", core.serialization.number().optional()),
    primaryPaidAmountCents: core.serialization.property(
        "primary_paid_amount_cents",
        core.serialization.number().optional()
    ),
    secondaryPaidAmountCents: core.serialization.property(
        "secondary_paid_amount_cents",
        core.serialization.number().optional()
    ),
    tertiaryPaidAmountCents: core.serialization.property(
        "tertiary_paid_amount_cents",
        core.serialization.number().optional()
    ),
    patientResponsibilityCents: core.serialization.property(
        "patient_responsibility_cents",
        core.serialization.number().optional()
    ),
    diagnosisIdZero: core.serialization.property("diagnosis_id_zero", DiagnosisId.optional()),
    diagnosisIdOne: core.serialization.property("diagnosis_id_one", DiagnosisId.optional()),
    diagnosisIdTwo: core.serialization.property("diagnosis_id_two", DiagnosisId.optional()),
    diagnosisIdThree: core.serialization.property("diagnosis_id_three", DiagnosisId.optional()),
    drugIdentification: core.serialization.property("drug_identification", DrugIdentification.optional()),
    serviceLineEraData: core.serialization.property("service_line_era_data", ServiceLineEraData.optional()),
    serviceLineManualAdjustments: core.serialization.property(
        "service_line_manual_adjustments",
        core.serialization.list(ServiceLineAdjustment).optional()
    ),
    relatedInvoices: core.serialization.property("related_invoices", core.serialization.list(Invoice).optional()),
    relatedInvoiceInfo: core.serialization.property(
        "related_invoice_info",
        core.serialization.list(InvoiceInfo).optional()
    ),
    denialReason: core.serialization.property("denial_reason", ServiceLineDenialReason.optional()),
    placeOfServiceCode: core.serialization.property("place_of_service_code", FacilityTypeCode.optional()),
    placeOfServiceCodeAsSubmitted: core.serialization.property(
        "place_of_service_code_as_submitted",
        FacilityTypeCode.optional()
    ),
    serviceLineId: core.serialization.property("service_line_id", ServiceLineId),
    procedureCode: core.serialization.property("procedure_code", core.serialization.string()),
    referringProvider: core.serialization.property("referring_provider", EncounterProvider.optional()),
    initialReferringProvider: core.serialization.property("initial_referring_provider", EncounterProvider.optional()),
    supervisingProvider: core.serialization.property("supervising_provider", EncounterProvider.optional()),
    orderingProvider: core.serialization.property("ordering_provider", EncounterProvider.optional()),
    quantity: Decimal,
    units: ServiceLineUnits,
    claimId: core.serialization.property("claim_id", ClaimId),
    dateOfServiceRange: core.serialization.property("date_of_service_range", DateRangeOptionalEnd),
    description: core.serialization.string().optional(),
    dateOfService: core.serialization.property("date_of_service", core.serialization.string()),
    endDateOfService: core.serialization.property("end_date_of_service", core.serialization.string().optional()),
});

export declare namespace ServiceLine {
    interface Raw {
        modifiers?: ProcedureModifier.Raw[] | null;
        charge_amount_cents?: number | null;
        allowed_amount_cents?: number | null;
        insurance_balance_cents?: number | null;
        patient_balance_cents?: number | null;
        paid_amount_cents?: number | null;
        primary_paid_amount_cents?: number | null;
        secondary_paid_amount_cents?: number | null;
        tertiary_paid_amount_cents?: number | null;
        patient_responsibility_cents?: number | null;
        diagnosis_id_zero?: DiagnosisId.Raw | null;
        diagnosis_id_one?: DiagnosisId.Raw | null;
        diagnosis_id_two?: DiagnosisId.Raw | null;
        diagnosis_id_three?: DiagnosisId.Raw | null;
        drug_identification?: DrugIdentification.Raw | null;
        service_line_era_data?: ServiceLineEraData.Raw | null;
        service_line_manual_adjustments?: ServiceLineAdjustment.Raw[] | null;
        related_invoices?: Invoice.Raw[] | null;
        related_invoice_info?: InvoiceInfo.Raw[] | null;
        denial_reason?: ServiceLineDenialReason.Raw | null;
        place_of_service_code?: FacilityTypeCode.Raw | null;
        place_of_service_code_as_submitted?: FacilityTypeCode.Raw | null;
        service_line_id: ServiceLineId.Raw;
        procedure_code: string;
        referring_provider?: EncounterProvider.Raw | null;
        initial_referring_provider?: EncounterProvider.Raw | null;
        supervising_provider?: EncounterProvider.Raw | null;
        ordering_provider?: EncounterProvider.Raw | null;
        quantity: Decimal.Raw;
        units: ServiceLineUnits.Raw;
        claim_id: ClaimId.Raw;
        date_of_service_range: DateRangeOptionalEnd.Raw;
        description?: string | null;
        date_of_service: string;
        end_date_of_service?: string | null;
    }
}
