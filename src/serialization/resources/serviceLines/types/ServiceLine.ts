/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const ServiceLine: core.serialization.ObjectSchema<serializers.ServiceLine.Raw, CandidApi.ServiceLine> =
    core.serialization
        .object({
            serviceLineId: core.serialization.property(
                "service_line_id",
                core.serialization.lazy(async () => (await import("../../..")).ServiceLineId)
            ),
            procedureCode: core.serialization.property("procedure_code", core.serialization.string()),
            quantity: core.serialization.string(),
            units: core.serialization.lazy(async () => (await import("../../..")).ServiceLineUnits),
            claimId: core.serialization.property(
                "claim_id",
                core.serialization.lazy(async () => (await import("../../..")).ClaimId)
            ),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).ServiceLineBaseWithOptionals));

export declare namespace ServiceLine {
    interface Raw extends serializers.ServiceLineBaseWithOptionals.Raw {
        service_line_id: serializers.ServiceLineId.Raw;
        procedure_code: string;
        quantity: string;
        units: serializers.ServiceLineUnits.Raw;
        claim_id: serializers.ClaimId.Raw;
    }
}
