/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../index";
import * as CandidApi from "../../../../../../../api/index";
import * as core from "../../../../../../../core";
import { NoteUpdate } from "../../../../../financials/types/NoteUpdate";
import { RefundReasonUpdate } from "../../../../../financials/types/RefundReasonUpdate";
import { InvoiceUpdate } from "../../../../../financials/types/InvoiceUpdate";

export const NonInsurancePayerRefundUpdate: core.serialization.Schema<
    serializers.nonInsurancePayerRefunds.v1.NonInsurancePayerRefundUpdate.Raw,
    CandidApi.nonInsurancePayerRefunds.v1.NonInsurancePayerRefundUpdate
> = core.serialization.object({
    refundTimestamp: core.serialization.property("refund_timestamp", core.serialization.date().optional()),
    refundNote: core.serialization.property("refund_note", NoteUpdate.optional()),
    refundReason: core.serialization.property("refund_reason", RefundReasonUpdate.optional()),
    invoiceId: core.serialization.property("invoice_id", InvoiceUpdate.optional()),
});

export declare namespace NonInsurancePayerRefundUpdate {
    interface Raw {
        refund_timestamp?: string | null;
        refund_note?: NoteUpdate.Raw | null;
        refund_reason?: RefundReasonUpdate.Raw | null;
        invoice_id?: InvoiceUpdate.Raw | null;
    }
}
