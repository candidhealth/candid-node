/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const EncounterCredentialingStatusResult: core.serialization.Schema<
    serializers.EncounterCredentialingStatusResult.Raw,
    CandidApi.EncounterCredentialingStatusResult
> = core.serialization
    .union("type", {
        credentialed: core.serialization.lazyObject(
            async () => (await import("../../..")).CredentialedEncounterStatusResult
        ),
        not_credentialed: core.serialization.object({}),
    })
    .transform<CandidApi.EncounterCredentialingStatusResult>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace EncounterCredentialingStatusResult {
    type Raw = EncounterCredentialingStatusResult.Credentialed | EncounterCredentialingStatusResult.NotCredentialed;

    interface Credentialed extends serializers.CredentialedEncounterStatusResult.Raw {
        type: "credentialed";
    }

    interface NotCredentialed {
        type: "not_credentialed";
    }
}
