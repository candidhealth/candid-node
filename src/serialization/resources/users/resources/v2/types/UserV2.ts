/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as CandidApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const UserV2: core.serialization.ObjectSchema<serializers.users.v2.UserV2.Raw, CandidApi.users.v2.UserV2> =
    core.serialization.object({
        userId: core.serialization.property(
            "user_id",
            core.serialization.lazy(async () => (await import("../../../../..")).users.v2.UserId)
        ),
        idpMetadata: core.serialization.property(
            "idp_metadata",
            core.serialization.list(
                core.serialization.lazy(async () => (await import("../../../../..")).users.v2.IdpUserMetadata)
            )
        ),
        primaryOrganizationId: core.serialization.property(
            "primary_organization_id",
            core.serialization.lazy(async () => (await import("../../../../..")).OrganizationId)
        ),
        userMetadata: core.serialization.property(
            "user_metadata",
            core.serialization.lazy(async () => (await import("../../../../..")).users.v2.UserMetadata)
        ),
        accessibleOrganizationIds: core.serialization.property(
            "accessible_organization_ids",
            core.serialization.list(
                core.serialization.lazy(async () => (await import("../../../../..")).OrganizationId)
            )
        ),
    });

export declare namespace UserV2 {
    interface Raw {
        user_id: serializers.users.v2.UserId.Raw;
        idp_metadata: serializers.users.v2.IdpUserMetadata.Raw[];
        primary_organization_id: serializers.OrganizationId.Raw;
        user_metadata: serializers.users.v2.UserMetadata.Raw;
        accessible_organization_ids: serializers.OrganizationId.Raw[];
    }
}
