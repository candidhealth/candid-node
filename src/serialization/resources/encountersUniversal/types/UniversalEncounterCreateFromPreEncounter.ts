/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as CandidApi from "../../../../api/index";
import * as core from "../../../../core";
import { EncounterSubmissionExpectation } from "../../encounters/resources/v4/types/EncounterSubmissionExpectation";
import { RenderingProvider } from "../../encounterProviders/resources/v2/types/RenderingProvider";
import { HealthCareCodeInformationCreate } from "../../healthCareCodeInformation/resources/v1/types/HealthCareCodeInformationCreate";
import { FacilityTypeCode } from "../../commons/types/FacilityTypeCode";
import { UniversalServiceLineCreate } from "../../serviceLines/resources/v2/types/UniversalServiceLineCreate";
import { TypeOfAdmissionOrVisitCode } from "../../x12/resources/v1/types/TypeOfAdmissionOrVisitCode";
import { PointOfOriginForAdmissionOrVisitCode } from "../../x12/resources/v1/types/PointOfOriginForAdmissionOrVisitCode";
import { PatientDischargeStatusCode } from "../../x12/resources/v1/types/PatientDischargeStatusCode";
import { TypeOfBillCompositeUpdate } from "../../x12/resources/v1/types/TypeOfBillCompositeUpdate";
import { State } from "../../commons/types/State";
import { UniversalEncounterCreateFromPreEncounterBase } from "./UniversalEncounterCreateFromPreEncounterBase";

export const UniversalEncounterCreateFromPreEncounter: core.serialization.ObjectSchema<
    serializers.encountersUniversal.UniversalEncounterCreateFromPreEncounter.Raw,
    CandidApi.encountersUniversal.UniversalEncounterCreateFromPreEncounter
> = core.serialization
    .object({
        submissionExpectation: core.serialization.property("submission_expectation", EncounterSubmissionExpectation),
        renderingProvider: core.serialization.property("rendering_provider", RenderingProvider.optional()),
        healthCareCodeInformation: core.serialization.property(
            "health_care_code_information",
            HealthCareCodeInformationCreate.optional(),
        ),
        placeOfServiceCode: core.serialization.property("place_of_service_code", FacilityTypeCode.optional()),
        serviceLines: core.serialization.property(
            "service_lines",
            core.serialization.list(UniversalServiceLineCreate).optional(),
        ),
        attendingProvider: core.serialization.property("attending_provider", RenderingProvider.optional()),
        admissionHour: core.serialization.property("admission_hour", core.serialization.number().optional()),
        admissionTypeCode: core.serialization.property("admission_type_code", TypeOfAdmissionOrVisitCode.optional()),
        admissionSourceCode: core.serialization.property(
            "admission_source_code",
            PointOfOriginForAdmissionOrVisitCode.optional(),
        ),
        dischargeHour: core.serialization.property("discharge_hour", core.serialization.number().optional()),
        dischargeStatus: core.serialization.property("discharge_status", PatientDischargeStatusCode.optional()),
        operatingProvider: core.serialization.property("operating_provider", RenderingProvider.optional()),
        otherOperatingProvider: core.serialization.property("other_operating_provider", RenderingProvider.optional()),
        typeOfBill: core.serialization.property("type_of_bill", TypeOfBillCompositeUpdate.optional()),
        accidentStateOrProvinceCode: core.serialization.property("accident_state_or_province_code", State.optional()),
    })
    .extend(UniversalEncounterCreateFromPreEncounterBase);

export declare namespace UniversalEncounterCreateFromPreEncounter {
    export interface Raw extends UniversalEncounterCreateFromPreEncounterBase.Raw {
        submission_expectation: EncounterSubmissionExpectation.Raw;
        rendering_provider?: RenderingProvider.Raw | null;
        health_care_code_information?: HealthCareCodeInformationCreate.Raw | null;
        place_of_service_code?: FacilityTypeCode.Raw | null;
        service_lines?: UniversalServiceLineCreate.Raw[] | null;
        attending_provider?: RenderingProvider.Raw | null;
        admission_hour?: number | null;
        admission_type_code?: TypeOfAdmissionOrVisitCode.Raw | null;
        admission_source_code?: PointOfOriginForAdmissionOrVisitCode.Raw | null;
        discharge_hour?: number | null;
        discharge_status?: PatientDischargeStatusCode.Raw | null;
        operating_provider?: RenderingProvider.Raw | null;
        other_operating_provider?: RenderingProvider.Raw | null;
        type_of_bill?: TypeOfBillCompositeUpdate.Raw | null;
        accident_state_or_province_code?: State.Raw | null;
    }
}
