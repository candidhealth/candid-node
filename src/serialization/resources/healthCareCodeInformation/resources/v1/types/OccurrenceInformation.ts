/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as CandidApi from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { OccurrenceInformationCodeQualifier } from "./OccurrenceInformationCodeQualifier";
import { OccurrenceCode } from "./OccurrenceCode";
import { D8Date } from "./D8Date";
import { HealthCareCodeInformation } from "./HealthCareCodeInformation";

export const OccurrenceInformation: core.serialization.ObjectSchema<
    serializers.healthCareCodeInformation.v1.OccurrenceInformation.Raw,
    CandidApi.healthCareCodeInformation.v1.OccurrenceInformation
> = core.serialization
    .object({
        occurrenceCodeQualifier: core.serialization.property(
            "occurrence_code_qualifier",
            OccurrenceInformationCodeQualifier,
        ),
        occurrenceCode: core.serialization.property("occurrence_code", OccurrenceCode),
        occurrenceDate: core.serialization.property("occurrence_date", D8Date),
    })
    .extend(HealthCareCodeInformation);

export declare namespace OccurrenceInformation {
    export interface Raw extends HealthCareCodeInformation.Raw {
        occurrence_code_qualifier: OccurrenceInformationCodeQualifier.Raw;
        occurrence_code: OccurrenceCode.Raw;
        occurrence_date: D8Date.Raw;
    }
}
