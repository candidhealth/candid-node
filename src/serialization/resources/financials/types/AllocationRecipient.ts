/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const AllocationRecipient: core.serialization.Schema<
    serializers.AllocationRecipient.Raw,
    CandidApi.AllocationRecipient
> = core.serialization
    .union("type", {
        service_line: core.serialization.object({
            value: core.serialization.lazy(async () => (await import("../../..")).ServiceLineId),
        }),
        claim: core.serialization.object({
            value: core.serialization.lazy(async () => (await import("../../..")).ClaimId),
        }),
        billing_provider_id: core.serialization.object({
            value: core.serialization.lazy(async () => (await import("../../..")).ProviderId),
        }),
    })
    .transform<CandidApi.AllocationRecipient>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace AllocationRecipient {
    type Raw = AllocationRecipient.ServiceLine | AllocationRecipient.Claim | AllocationRecipient.BillingProviderId;

    interface ServiceLine {
        type: "service_line";
        value: serializers.ServiceLineId.Raw;
    }

    interface Claim {
        type: "claim";
        value: serializers.ClaimId.Raw;
    }

    interface BillingProviderId {
        type: "billing_provider_id";
        value: serializers.ProviderId.Raw;
    }
}
