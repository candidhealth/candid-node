/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const InvoiceUpdate: core.serialization.Schema<serializers.InvoiceUpdate.Raw, CandidApi.InvoiceUpdate> =
    core.serialization
        .union("type", {
            set: core.serialization.object({
                value: core.serialization.lazy(async () => (await import("../../..")).InvoiceId),
            }),
            remove: core.serialization.object({}),
        })
        .transform<CandidApi.InvoiceUpdate>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace InvoiceUpdate {
    type Raw = InvoiceUpdate.Set | InvoiceUpdate.Remove;

    interface Set {
        type: "set";
        value: serializers.InvoiceId.Raw;
    }

    interface Remove {
        type: "remove";
    }
}
