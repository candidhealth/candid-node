/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as CandidApi from "../../../../api";
import * as core from "../../../../core";

export const AllocationRecipientCreate: core.serialization.Schema<
    serializers.AllocationRecipientCreate.Raw,
    CandidApi.AllocationRecipientCreate
> = core.serialization
    .union("type", {
        service_line_by_id: core.serialization.object({
            value: core.serialization.lazy(async () => (await import("../../..")).ServiceLineId),
        }),
        claim_by_id: core.serialization.object({
            value: core.serialization.lazy(async () => (await import("../../..")).ClaimId),
        }),
        billing_provider_by_id: core.serialization.object({
            value: core.serialization.lazy(async () => (await import("../../..")).ProviderId),
        }),
    })
    .transform<CandidApi.AllocationRecipientCreate>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace AllocationRecipientCreate {
    type Raw =
        | AllocationRecipientCreate.ServiceLineById
        | AllocationRecipientCreate.ClaimById
        | AllocationRecipientCreate.BillingProviderById;

    interface ServiceLineById {
        type: "service_line_by_id";
        value: serializers.ServiceLineId.Raw;
    }

    interface ClaimById {
        type: "claim_by_id";
        value: serializers.ClaimId.Raw;
    }

    interface BillingProviderById {
        type: "billing_provider_by_id";
        value: serializers.ProviderId.Raw;
    }
}
