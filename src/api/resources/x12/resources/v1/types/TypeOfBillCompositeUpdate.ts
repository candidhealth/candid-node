/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as CandidApi from "../../../../../index";

/**
 * A type of bill can either be seen as a compositio of structured parts, or as a literal string.
 * This union represents the potential to express a type of bill either as one of those two shapes.
 * Passing a string, this update will be seen as a complete 4 digit code, along with a padding code 0, that
 * should match a valid composition.
 * Passing as a structure, the update will be seen as three parts and will be joined together by the server
 * to represent a valid composition for you.
 * Which you use depends upon whether you are "passing through" coded information or making a decision about its
 * structure explicitly.
 */
export type TypeOfBillCompositeUpdate =
    /**
     * Full 4 digit type of bill code, starting with a leading 0. */
    | CandidApi.x12.v1.TypeOfBillCompositeUpdate.RawCode
    /**
     * Use composite_codes to send type_of_care, type_of_facility and frequency_code as separate enums. */
    | CandidApi.x12.v1.TypeOfBillCompositeUpdate.CompositeCodes;

export namespace TypeOfBillCompositeUpdate {
    export interface RawCode {
        type: "raw_code";
        value: string;
    }

    export interface CompositeCodes extends CandidApi.x12.v1.TypeOfBillCompositeBase {
        type: "composite_codes";
    }
}
