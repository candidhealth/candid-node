/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as CandidApi from "../../../../../../index";

/**
 * @example
 *     {
 *         limit: 1,
 *         sort: "created_at",
 *         sortDirection: "asc",
 *         pageToken: CandidApi.PageToken("eyJ0b2tlbiI6IjEiLCJwYWdlX3Rva2VuIjoiMiJ9"),
 *         patientExternalId: "string",
 *         bundleStatus: "not-started",
 *         chargeStatus: "planned",
 *         chargeExternalId: "string",
 *         dateOfServiceMin: "2023-01-15",
 *         dateOfServiceMax: "2023-01-15",
 *         claimIds: CandidApi.EncounterId("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"),
 *         bundleIds: CandidApi.ChargeCaptureBundleId("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"),
 *         billingProviderNpis: "string",
 *         serviceFacilityName: "string",
 *         primaryPayerIds: "string",
 *         renderingProviderNpis: "string",
 *         renderingProviderNames: "string",
 *         supervisingProviderNpis: "string",
 *         supervisingProviderNames: "string",
 *         hasChargeCaptureUpdates: true
 *     }
 */
export interface GetAllChargeCaptureBundlesRequest {
    /**
     * Maximum number of entities per page, defaults to 100.
     */
    limit?: number;
    /**
     * Defaults to created_at
     */
    sort?: CandidApi.chargeCaptureBundles.v1.ChargeCaptureBundleSortField;
    /**
     * Sort direction. Defaults to descending order if not provided.
     */
    sortDirection?: CandidApi.SortDirection;
    pageToken?: CandidApi.PageToken;
    /**
     * The patient ID from the external EMR platform for the patient
     */
    patientExternalId?: string;
    /**
     * the status of the charge capture bundle, refers to whether it was able to create an encounter.
     */
    bundleStatus?: CandidApi.chargeCaptureBundles.v1.ChargeCaptureBundleStatus;
    /**
     * the status of the charge captures
     */
    chargeStatus?: CandidApi.chargeCapture.v1.ChargeCaptureStatus;
    /**
     * A client-specified unique ID to associate with this encounter;
     * for example, your internal encounter ID or a Dr. Chrono encounter ID.
     * This field should not contain PHI.
     */
    chargeExternalId?: string;
    /**
     * Date formatted as YYYY-MM-DD; eg: 2019-08-24.
     * This date must be the local date in the timezone where the service occurred.
     */
    dateOfServiceMin?: string;
    /**
     * Date formatted as YYYY-MM-DD; eg: 2019-08-24.
     * This date must be the local date in the timezone where the service occurred.
     */
    dateOfServiceMax?: string;
    /**
     * A list of claim IDs to filter by. This will return all charge capture bundles that have a resulting claim with one of the IDs in this list.
     */
    claimIds?: CandidApi.EncounterId | CandidApi.EncounterId[];
    /**
     * A list of bundle IDs to filter by.
     */
    bundleIds?: CandidApi.ChargeCaptureBundleId | CandidApi.ChargeCaptureBundleId[];
    /**
     * A list of billing provider NPIs to filter by. This will return all charge capture bundles which include one or more charges with one of the NPIs in this list.
     */
    billingProviderNpis?: string | string[];
    /**
     * A string to filter by. This will return all charge capture bundles which include one or more charges with this service facility name.
     */
    serviceFacilityName?: string;
    /**
     * A list of primary payer IDs to filter by. This will return all charge capture bundles which include one or more charges with one of the primary payer IDs in this list.
     */
    primaryPayerIds?: string | string[];
    /**
     * A list of rendering provider NPIs to filter by. This will return all charge capture bundles which include one or more charges with one of the NPIs in this list.
     */
    renderingProviderNpis?: string | string[];
    /**
     * A list of rendering provider names to filter by. This will return all charge capture bundles which include one or more charges with one of the names in this list.
     */
    renderingProviderNames?: string | string[];
    /**
     * A list of supervising provider NPIs to filter by. This will return all charge capture bundles which include one or more charges with one of the NPIs in this list.
     */
    supervisingProviderNpis?: string | string[];
    /**
     * A list of supervising provider names to filter by. This will return all charge capture bundles which include one or more charges with one of the names in this list.
     */
    supervisingProviderNames?: string | string[];
    /**
     * If true, only return bundles that have charge captures that have been updated since the bundle has had a status of BILLED. See the updates property on ChargeCapture for more details.
     */
    hasChargeCaptureUpdates?: boolean;
}
