/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Appointments } from "../resources/appointments/client/Client";
import { Coverages } from "../resources/coverages/client/Client";
import { EligibilityChecks } from "../resources/eligibilityChecks/client/Client";
import { Images } from "../resources/images/client/Client";
import { Lists } from "../resources/lists/client/Client";
import { Notes } from "../resources/notes/client/Client";
import { Patients } from "../resources/patients/client/Client";
import { Tags } from "../resources/tags/client/Client";

export declare namespace PreEncounter {
    export interface Options {
        environment?: core.Supplier<environments.CandidApiEnvironment | environments.CandidApiEnvironmentUrls>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class PreEncounter {
    protected _appointments: Appointments | undefined;
    protected _coverages: Coverages | undefined;
    protected _eligibilityChecks: EligibilityChecks | undefined;
    protected _images: Images | undefined;
    protected _lists: Lists | undefined;
    protected _notes: Notes | undefined;
    protected _patients: Patients | undefined;
    protected _tags: Tags | undefined;

    constructor(protected readonly _options: PreEncounter.Options = {}) {}

    public get appointments(): Appointments {
        return (this._appointments ??= new Appointments(this._options));
    }

    public get coverages(): Coverages {
        return (this._coverages ??= new Coverages(this._options));
    }

    public get eligibilityChecks(): EligibilityChecks {
        return (this._eligibilityChecks ??= new EligibilityChecks(this._options));
    }

    public get images(): Images {
        return (this._images ??= new Images(this._options));
    }

    public get lists(): Lists {
        return (this._lists ??= new Lists(this._options));
    }

    public get notes(): Notes {
        return (this._notes ??= new Notes(this._options));
    }

    public get patients(): Patients {
        return (this._patients ??= new Patients(this._options));
    }

    public get tags(): Tags {
        return (this._tags ??= new Tags(this._options));
    }
}
