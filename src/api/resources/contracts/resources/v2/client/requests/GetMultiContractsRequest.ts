/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as CandidApi from "../../../../../../index";

/**
 * @example
 *     {
 *         pageToken: CandidApi.PageToken("eyJ0b2tlbiI6IjEiLCJwYWdlX3Rva2VuIjoiMiJ9"),
 *         limit: 1,
 *         contractingProviderId: CandidApi.contracts.v2.ContractingProviderId("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"),
 *         renderingProviderIds: CandidApi.contracts.v2.RenderingProviderid("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"),
 *         payerNames: "string",
 *         states: CandidApi.State.Aa,
 *         contractStatus: CandidApi.contracts.v2.ContractStatus.Pending
 *     }
 */
export interface GetMultiContractsRequest {
    pageToken?: CandidApi.PageToken;
    /**
     * Max number of contracts returned. Defaults to 1000. Max is 1000.
     */
    limit?: number;
    contractingProviderId?: CandidApi.contracts.v2.ContractingProviderId;
    renderingProviderIds?: CandidApi.contracts.v2.RenderingProviderid | CandidApi.contracts.v2.RenderingProviderid[];
    /**
     * Filter to contracts that include any of the included payer names.
     */
    payerNames?: string | string[];
    states?: CandidApi.State | CandidApi.State[];
    /**
     * The status of the contract. Defaults to `pending`
     */
    contractStatus?: CandidApi.contracts.v2.ContractStatus;
}
